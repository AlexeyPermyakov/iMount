////////////////////////////////////////////////////////////////////////////////
// Клиентский модуль для работы с площадными объектами (линия, полигон).
// Основное назначение:
//  - типовые действия по редактированию геометрии;
//  - перевод геометрии из одной системы координат в другую.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Переводит геометрию из местной системы координат в систему координат WGS-84.
//
// Параметры:
//  Форма		 - УправляемаяФорма - Форма, на которой расположен реквизит геометрии;
//  ИмяТаблицы	 - Строка - название таблицы, если геометрия не реквизит формы, а реквизит табличной части.
//
Процедура ГеометрияПеревестиИзМскВWgs(Форма, ИмяТаблицы = "") Экспорт
	Геометрия = ?(ИмяТаблицы = "", Форма.Объект.ГеометрияКадастра, Форма.Элементы[ИмяТаблицы].ТекущиеДанные.ГеометрияКадастра);
	
	Если Не ЗначениеЗаполнено(Геометрия) Тогда
		ПоказатьПредупреждение(, "Геометрия в местной системе координат не заполнена!");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Форма.Объект.ПараметрыПереводаВWgs84) Тогда
		ПоказатьПредупреждение(, "Параметры перевода не выбраны!");
		Возврат;
	КонецЕсли;
	
	ПереведеннаяГеометрия = "";
	Если гисРаботаСПлощаднымиОбъектамиСервер.ГеометрияПеревестиИзМскВWgs84(Геометрия, Форма.Объект.ПараметрыПереводаВWgs84, ПереведеннаяГеометрия, Форма.Объект.Наименование) Тогда
		Если ИмяТаблицы = "" Тогда
			Форма.Объект.ГеометрияWgs = ПереведеннаяГеометрия;
		Иначе
			Форма.Элементы[ИмяТаблицы].ТекущиеДанные.ГеометрияWgs = ПереведеннаяГеометрия;
		КонецЕсли;
		Форма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

// Переводит геометрию из системы координат WGS-84 в местную систему координат.
//
// Параметры:
//  Форма		 - УправляемаяФорма - Форма, на которой расположен реквизит геометрии;
//  ИмяТаблицы	 - Строка - название таблицы, если геометрия не реквизит формы, а реквизит табличной части.
//
Процедура ГеометрияПеревестиИзWgsВМск(Форма, ИмяТаблицы = "") Экспорт
	Геометрия = ?(ИмяТаблицы = "", Форма.Объект.ГеометрияWgs, Форма.Элементы[ИмяТаблицы].ТекущиеДанные.ГеометрияWgs);
	
	Если Не ЗначениеЗаполнено(Геометрия) Тогда
		ПоказатьПредупреждение(, "Геометрия в системе координат WGS-84 не заполнена!");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Форма.Объект.ПараметрыПереводаВWgs84) Тогда
		ПоказатьПредупреждение(, "Параметры перевода не выбраны!");
		Возврат;
	КонецЕсли;
	
	ПереведеннаяГеометрия = "";
	Если гисРаботаСПлощаднымиОбъектамиСервер.ГеометрияПеревестиИзWgs84ВМск(Геометрия, Форма.Объект.ПараметрыПереводаВWgs84, ПереведеннаяГеометрия, Форма.Объект.Наименование) Тогда
		Если ИмяТаблицы = "" Тогда
			Форма.Объект.ГеометрияКадастра = ПереведеннаяГеометрия;
		Иначе
			Форма.Элементы[ИмяТаблицы].ТекущиеДанные.ГеометрияКадастра = ПереведеннаяГеометрия;
		КонецЕсли;
		Форма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры


// Открывает форму редактирования геометрии в виде таблицы.
//
// Параметры:
//  Форма				 - УправляемаяФорма - форма, на которой расположен реквизит геометрии;
//  ИмяРеквизита		 - Строка - имя реквизита геометрии;
//  ЭлементДляВыбора	 - ЭлементФормы - элемент формы, около которого открывается список выбора типа геометрии;
//  ИмяТаблицы			 - Строка - имя таблицы формы (ЭлементФормы), заполнено, если геометрия - реквизит табличной части;
//  СписокТиповГеометрии - СписокЗначений - список возможных типов для редактирования этой геометрии.
//
// Пример:
//  1) на форме (параметр "Форма") есть реквизит "Объект", у которого есть реквизит "ГеометрияWgs"
//		  ИмяРеквизита = "ГеометрияWgs"
//		  ИмяТаблицы = ""
//  2) на форме (параметр "Форма") есть таблица (таблица значений, табличная часть объекта) с реквизитом "ГеометрияWgs",
//     имя таблицы формы (ЭлементФормы) = "Контуры"
//		  ИмяРеквизита = "ГеометрияWgs"
//		  ИмяТаблицы = "Контуры"
Процедура ГеометрияРедактироватьВТаблице(Форма, ИмяРеквизита, ЭлементДляВыбора, ИмяТаблицы = "", СписокТиповГеометрии = Неопределено) Экспорт
	Реквизит = ?(ИмяТаблицы = "", Форма.Объект[ИмяРеквизита], Форма.Элементы[ИмяТаблицы].ТекущиеДанные[ИмяРеквизита]);
	
	ТипГеометрии = Неопределено;
	
	Если ЗначениеЗаполнено(Реквизит) Тогда
		Структура = гисРаботаСJson.ПрочитатьНативно(Реквизит);
		ТипГеометрии = Структура.geometry.type;
	Иначе
		Если СписокТиповГеометрии = Неопределено Тогда
			ТипыГеометрии = Новый СписокЗначений();
			ТипыГеометрии.Добавить("LineString");
			ТипыГеометрии.Добавить("MultiLineString");
			ТипыГеометрии.Добавить("Polygon");
			ТипыГеометрии.Добавить("MultiPolygon");
		Иначе
			ТипыГеометрии = СписокТиповГеометрии;
		КонецЕсли;
		ДополнительныеПараметры = Новый Структура("Форма,ИмяРеквизита,ИмяТаблицы", Форма, ИмяРеквизита, ИмяТаблицы);
		Форма.ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ГеометрияРедактироватьВТаблицеВыборТипаЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТипыГеометрии, ЭлементДляВыбора);
		Возврат;
	КонецЕсли;
	
	ГеометрияРедактироватьВТаблицеОткрытие(Форма, ТипГеометрии, ИмяРеквизита, ИмяТаблицы);
КонецПроцедуры

// Открывает форму редактирования геометрии в виде Json.
//
// Параметры:
//  Форма		 - УправляемаяФорма - форма, на которой расположен реквизит геометрии;
//  ИмяРеквизита - Строка - имя реквизита геометрии;
//  ИмяТаблицы	 - Строка - имя таблицы, если геометрия не реквизит формы, а реквизит табличной части;
//
Процедура ГеометрияРедактироватьJson(Форма, ИмяРеквизита, ИмяТаблицы = "") Экспорт
	Реквизит = ?(ИмяТаблицы = "", Форма.Объект[ИмяРеквизита], Форма.Элементы[ИмяТаблицы].ТекущиеДанные[ИмяРеквизита]);
	
	Если ЗначениеЗаполнено(Реквизит) Тогда
		ФорматированнаяГеометрия = гисРаботаСJson.ЗаписатьНативно(гисРаботаСJson.ПрочитатьНативно(Реквизит), Ложь);
	Иначе
		ФорматированнаяГеометрия = "";
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("Форма,ИмяРеквизита,ИмяТаблицы", Форма, ИмяРеквизита, ИмяТаблицы);
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ГеометрияРедактироватьJsonЗавершение", ЭтотОбъект, ДополнительныеПараметры), 
		ФорматированнаяГеометрия, "Редактирование геометрии в формате GeoJSON", , Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РедактированиеГеометрииВТаблице

// Редактирование геометрии в таблице.
// Обработка выбора типа геометрии, вызов функции открытия формы для редактирования геометрии.
//
// Параметры:
//  ВыбранныйТипГеометрии	 - ЭлементСпискаЗначений - выбранный тип геометрии;
//  ДополнительныеПараметры	 - Структура - в параметрах передаются:
//			Форма			- УправляемаяФорма - форма, на которой редактируется геометрия;
//  		ИмяРеквизита	- Строка - имя реквизита геометрии;
//			ИмяТаблицы		- Строка - имя таблицы формы (ЭлементФормы), заполнено, если геометрия - реквизит табличной части;
//
Процедура ГеометрияРедактироватьВТаблицеВыборТипаЗавершение(ВыбранныйТипГеометрии, ДополнительныеПараметры) Экспорт
	Если ВыбранныйТипГеометрии <> Неопределено Тогда
		ТипГеометрии = ВыбранныйТипГеометрии.Значение;
		ГеометрияРедактироватьВТаблицеОткрытие(ДополнительныеПараметры.Форма, ТипГеометрии, ДополнительныеПараметры.ИмяРеквизита, ДополнительныеПараметры.ИмяТаблицы);
	КонецЕсли;
КонецПроцедуры

// Редактирование геометрии в таблице.
// Выполняет открытие формы редактирования. Если тип не задан - сообщение об ошибке.
//
// Параметры:
//  Форма		 - УправляемаяФорма - форма, на которой редактируется геометрия;
//  ТипГеометрии - Строка - название типа геометрии для GeoJson;
//  ИмяРеквизита - Строка - имя реквизита геометрии;
//  ИмяТаблицы	 - Строка - имя таблицы формы (ЭлементФормы), заполнено, если геометрия - реквизит табличной части;
//
Процедура ГеометрияРедактироватьВТаблицеОткрытие(Форма, ТипГеометрии, ИмяРеквизита, ИмяТаблицы)
	Если ТипГеометрии <> Неопределено Тогда
		Реквизит = ?(ИмяТаблицы = "", Форма.Объект[ИмяРеквизита], Форма.Элементы[ИмяТаблицы].ТекущиеДанные[ИмяРеквизита]);
		ПараметрыФормы = Новый Структура("Геометрия", Реквизит);
		Если ТипГеометрии = "LineString" Тогда
			ИмяФормыДляРедактирования = "ОбщаяФорма.гисРедакторЛинии";
		ИначеЕсли ТипГеометрии = "MultiLineString" Тогда
			ИмяФормыДляРедактирования = "ОбщаяФорма.гисРедакторМультилинии";
		ИначеЕсли ТипГеометрии = "Polygon" Тогда
			ИмяФормыДляРедактирования = "ОбщаяФорма.гисРедакторПолигона";
		ИначеЕсли ТипГеометрии = "MultiPolygon" Тогда
			ИмяФормыДляРедактирования = "ОбщаяФорма.гисРедакторМультиполигона";
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю("Данный тип геометрии не поддерживается!");
			Возврат;
		КонецЕсли;
		ДополнительныеПараметры = Новый Структура("Форма,ИмяРеквизита,ИмяТаблицы", Форма, ИмяРеквизита, ИмяТаблицы);
		ОткрытьФорму(ИмяФормыДляРедактирования, ПараметрыФормы, , , , , Новый ОписаниеОповещения("ГеометрияРедактироватьВТаблицеЗавершение", ЭтотОбъект, ДополнительныеПараметры), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не указан тип геометрии!");
	КонецЕсли;
КонецПроцедуры

// Редактирование геометрии в таблице.
// Обработка результата редактирования геометрии:
// запись в реквизит формы, если нужно - пересчет в другую систему координат.
//
// Параметры:
//  Геометрия				 - Строка - отредактированная геометрия,
//							 - Неопределено, если от редактирования отказались;
//  ДополнительныеПараметры	 - Структура - содержит:
//			Форма			- УправляемаяФорма - форма, на которой редактируется геометрия;
//  		ИмяРеквизита	- Строка - имя реквизита геометрии;
//			ИмяТаблицы		- Строка - имя таблицы формы (ЭлементФормы), заполнено, если геометрия - реквизит табличной части;
//
Процедура ГеометрияРедактироватьВТаблицеЗавершение(Геометрия, ДополнительныеПараметры) Экспорт
	Если Геометрия <> Неопределено Тогда
		Форма = ДополнительныеПараметры.Форма;
		ИмяРеквизита = ДополнительныеПараметры.ИмяРеквизита;
		ИмяТаблицы = ДополнительныеПараметры.ИмяТаблицы;
		
		Если ИмяТаблицы = "" Тогда
			Форма.Объект[ИмяРеквизита] = Геометрия;
		Иначе
			Форма.Элементы[ИмяТаблицы].ТекущиеДанные[ИмяРеквизита] = Геометрия;
		КонецЕсли;
		
		Форма.Модифицированность = Истина;
		
		Попытка
			// пытаемся перевести МСК <--> WGS
			Если ЗначениеЗаполнено(Форма.Объект.ПараметрыПереводаВWgs84) Тогда
				Если ДополнительныеПараметры.ИмяРеквизита = "ГеометрияWgs" Тогда
					ГеометрияПеревестиИзWgsВМск(Форма, ИмяТаблицы);
				ИначеЕсли ДополнительныеПараметры.ИмяРеквизита = "ГеометрияКадастра" Тогда
					ГеометрияПеревестиИзМскВWgs(Форма, ИмяТаблицы);
				КонецЕсли;
			КонецЕсли;
		Исключение
			// нет второй геометрии
		КонецПопытки;
		
		Оповестить("ГеометрияИзменилась");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область РедактированиеГеометрииВФорматеJson 

// Редактирование геометрии в формате json.
// Заключительные действия по редактированию: 
// запись в реквизит формы, если нужно - пересчет в другую систему координат.
//
// Параметры:
//  ФорматированнаяГеометрия - Строка - отредактированная геометрия,
//							 - Неопределено, если от редактирования отказались;
//  ДополнительныеПараметры	 - Структура - содержит:
//			Форма			- УправляемаяФорма - форма, на которой редактируется геометрия;
//  		ИмяРеквизита	- Строка - имя реквизита геометрии;
//			ИмяТаблицы		- Строка - имя таблицы формы (ЭлементФормы), заполнено, если геометрия - реквизит табличной части;
//
Процедура ГеометрияРедактироватьJsonЗавершение(ФорматированнаяГеометрия, ДополнительныеПараметры) Экспорт
	Если ФорматированнаяГеометрия <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(ФорматированнаяГеометрия) Тогда
			Геометрия = "";
		Иначе 
			Попытка
				Геометрия = гисРаботаСJson.ЗаписатьНативно(гисРаботаСJson.ПрочитатьНативно(ФорматированнаяГеометрия));
			Исключение
				ОбщегоНазначенияКлиент.СообщитьПользователю("Некорректная геометрия! Геометрия не сохранена!");
				Возврат;
			КонецПопытки;
		КонецЕсли;
		
		Форма = ДополнительныеПараметры.Форма;
		ИмяРеквизита = ДополнительныеПараметры.ИмяРеквизита;
		ИмяТаблицы = ДополнительныеПараметры.ИмяТаблицы;
		
		Если ИмяТаблицы = "" Тогда
			Форма.Объект[ИмяРеквизита] = Геометрия;
		Иначе
			Форма.Элементы[ИмяТаблицы].ТекущиеДанные[ИмяРеквизита] = Геометрия;
		КонецЕсли;
		
		Форма.Модифицированность = Истина;
		
		// вторая геометрия
		Если ЗначениеЗаполнено(ФорматированнаяГеометрия) Тогда
			Попытка
				// пытаемся перевести МСК <--> WGS
				Если ЗначениеЗаполнено(Форма.Объект.ПараметрыПереводаВWgs84) Тогда
					Если ИмяРеквизита = "ГеометрияWgs" Тогда
						ГеометрияПеревестиИзWgsВМск(Форма, ИмяТаблицы);
					ИначеЕсли ИмяРеквизита = "ГеометрияКадастра" Тогда
						ГеометрияПеревестиИзМскВWgs(Форма, ИмяТаблицы);
					КонецЕсли;
				КонецЕсли;
			Исключение
				// нет второй геометрии
			КонецПопытки;
		КонецЕсли;
		
		Оповестить("ГеометрияИзменилась");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти
