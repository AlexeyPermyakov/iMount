
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.Геометрия) Тогда
		ЗагрузитьГеометрию(Параметры.Геометрия);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНомераЛиний

&НаКлиенте
Процедура НомераЛинийПриАктивизацииСтроки(Элемент)
	Если Элементы.НомераЛиний.ТекущиеДанные = Неопределено Тогда
		Элементы.ОсновнойКонтур.ОтборСтрок = Неопределено;
	Иначе
		Если Не ЗначениеЗаполнено(Элементы.НомераЛиний.ТекущиеДанные.КлючСтроки) Тогда
			Элементы.НомераЛиний.ТекущиеДанные.КлючСтроки = ПолучитьСледующийКлючЛиний();
			Элементы.НомераЛиний.ТекущиеДанные.НомерСтроки = НомераЛиний.Количество();
		КонецЕсли;
		
		УсловиеОтбора = Новый ФиксированнаяСтруктура("КлючСтрокиНомераЛиний", Элементы.НомераЛиний.ТекущиеДанные.КлючСтроки);
		Элементы.ОсновнойКонтур.ОтборСтрок = УсловиеОтбора;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомераЛинийПередУдалением(Элемент, Отказ)
	КлючСтрокиНомераЛиний = Элементы.НомераЛиний.ТекущиеДанные.КлючСтроки;
	
	Строки = ОсновнойКонтур.НайтиСтроки(Новый Структура("КлючСтрокиНомераЛиний", КлючСтрокиНомераЛиний));
	Для Каждого Строка Из Строки Цикл
		ОсновнойКонтур.Удалить(Строка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НомераЛинийПослеУдаления(Элемент)
	ОбновитьНомераЛиний();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновнойКонтур

&НаКлиенте
Процедура ОсновнойКонтурПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.ОсновнойКонтур.ТекущиеДанные.КлючСтрокиНомераЛиний = Элементы.НомераЛиний.ТекущиеДанные.КлючСтроки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОсновнойКонтурПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если НомераЛиний.Количество() = 0 Или Элементы.НомераЛиний.ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	ЭтотОбъект.Закрыть(ГеометрияВJson());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает геометрию, введенную на форме, в формате GeoJson.
// Геометрия будет типа MultiLineString.
// 
// Возвращаемое значение:
//   - Строка - геометрия в формате GeoJson.
//
&НаСервере
Функция ГеометрияВJson()
	Если НомераЛиний.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Мультилиния = Новый Массив;
	Для каждого НомерЛинии Из НомераЛиний Цикл
		Линия = Новый Массив;
		
		СтрокиОсновногоКонтура = ОсновнойКонтур.НайтиСтроки(Новый Структура("КлючСтрокиНомераЛиний", НомерЛинии.КлючСтроки));
		Для каждого Строка Из СтрокиОсновногоКонтура Цикл
			Координаты = Новый Массив;
			Координаты.Добавить(Строка.Долгота);
			Координаты.Добавить(Строка.Широта);
			Линия.Добавить(Координаты);
		КонецЦикла;
		
		Мультилиния.Добавить(Линия);
	КонецЦикла;
	
	Возврат гисГисСервер.ПолучитьGeoJson(Мультилиния, "MultiLineString");
КонецФункции

// Загружает на форму геометрию типа MultiLineString сохраненную в формате GeoJson.
// Если тип другой - выдает сообщение об ошибке.
//
// Параметры:
//  ГеометрияСтрока	 - Строка - геометрия в формате GeoJson.
//
&НаСервере
Процедура ЗагрузитьГеометрию(ГеометрияСтрока)
	Геометрия = гисРаботаСJson.ПрочитатьНативно(ГеометрияСтрока);
	
	geometry = Геометрия.geometry;
	Если geometry.type <> "MultiLineString" Тогда
		ОбщегоНазначения.СообщитьПользователю("Ошибка при загрузке геометрии!");
		Возврат;
	КонецЕсли;
	
	МассивЛиний = geometry.coordinates;
	
	Для НомерЛинии = 0 По МассивЛиний.Количество() - 1 Цикл
		НомерЛинииВИнтерфейсе = НомерЛинии + 1;
		
		НоваяСтрока = НомераЛиний.Добавить();
		НоваяСтрока.НомерСтроки = НомерЛинииВИнтерфейсе;
		НоваяСтрока.КлючСтроки = НомерЛинииВИнтерфейсе;
		
		ТекущаяЛиния = МассивЛиний[НомерЛинии];
		Для Каждого Координаты Из ТекущаяЛиния Цикл
			НоваяСтрока = ОсновнойКонтур.Добавить();
			НоваяСтрока.Долгота = Координаты[0];
			НоваяСтрока.Широта = Координаты[1];
			НоваяСтрока.КлючСтрокиНомераЛиний = НомерЛинииВИнтерфейсе;
		КонецЦикла;
	КонецЦикла; 
КонецПроцедуры


// В таблице НомераЛиний проставляем заново номера линий.
//
&НаКлиенте
Процедура ОбновитьНомераЛиний()
	НомерСтроки = 1;
	Для каждого Строка Из НомераЛиний Цикл
		Строка.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла; 
КонецПроцедуры

// Возвращает следующий ключ строки для табличной части НомерЛиний.
// 
// Возвращаемое значение:
//   - Число - Ключ строки для следующей линии.
//
&НаКлиенте
Функция ПолучитьСледующийКлючЛиний()
	МаксимальныйКлюч = 0;
	Для каждого Строка Из НомераЛиний Цикл
		Если Строка.КлючСтроки > МаксимальныйКлюч Тогда
			МаксимальныйКлюч = Строка.КлючСтроки;
		КонецЕсли; 
	КонецЦикла;
	Возврат МаксимальныйКлюч + 1;
КонецФункции

#КонецОбласти
