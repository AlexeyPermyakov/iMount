
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация	
	ДополнительныеПараметрыКИ = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметрыКИ.Вставить("ИмяЭлементаДляРазмещения", "ГруппаКонтактнаяИнформация");
	
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ДополнительныеПараметрыКИ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

	УстановитьСвойстваГиперссылкиИсторииФИО(Объект, Элементы, НаборЗаписейФИОФизЛиц.Количество());

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	ПрочитатьИсториюФИО();

	УстановитьСвойстваГиперссылкиИсторииФИО(Объект, Элементы, НаборЗаписейФИОФизЛиц.Количество());

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Справочники.ФизическиеЛица.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если НаборЗаписейФИОФизЛиц.Количество() = 0 Тогда
		ЗаполнитьФИОПоНаименованию();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтредактированаИстория" И Параметр.ИмяРегистра = "ФИОФизическихЛиц"
	 И Источник = Объект.Ссылка Тогда
		
		НаборЗаписейФИОФизЛиц.Очистить();
		Для Каждого ТекСтр Из Параметр.НаборЗаписей Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписейФИОФизЛиц.Добавить(), ТекСтр);
		КонецЦикла;
		
		Если НаборЗаписейФИОФизЛиц.Количество() > 0 Тогда
			
			ПоследняяЗапись = НаборЗаписейФИОФизЛиц[НаборЗаписейФИОФизЛиц.Количество() - 1];
			НовоеНаименование = 
				ПоследняяЗапись.Фамилия 
				+ ?(ЗначениеЗаполнено(ПоследняяЗапись.Имя), " ", "") + ПоследняяЗапись.Имя 
				+ ?(ЗначениеЗаполнено(ПоследняяЗапись.Отчество), " ", "") + ПоследняяЗапись.Отчество;
			
			Если Объект.Наименование <> НовоеНаименование Тогда
				Объект.Наименование = НовоеНаименование;
				Модифицированность = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьСвойстваГиперссылкиИсторииФИО(Объект, Элементы, НаборЗаписейФИОФизЛиц.Количество());
		
	ИначеЕсли ИмяСобытия = "ИзмененыЛичныеДанные" И Параметр.ИмяРегистра = "ФИОФизическихЛиц"
	 И Источник = Объект.Ссылка Тогда
		
		Прочитать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаписатьИзмененияФИО();
	
	УстановитьСвойстваГиперссылкиИсторииФИО(Объект, Элементы, НаборЗаписейФИОФизЛиц.Количество());

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	ЗаполнитьФИОПоНаименованию();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИсторияФИО(Команда)
	
	ПараметрыФормы = Новый Структура("ФизическоеЛицо, НаборЗаписей", Объект.Ссылка, НаборЗаписейФИОФизЛиц);
	ОткрытьФорму("РегистрСведений.ФИОФизическихЛиц.Форма.РедактированиеИстории", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьИзмененияФИО()
	
	НаборЗаписейРегистра = РеквизитФормыВЗначение("НаборЗаписейФИОФизЛиц");
	
	НаборЗаписейРегистра.Отбор.ФизическоеЛицо.Установить(Объект.Ссылка);
	Для Каждого ТекСтр Из НаборЗаписейРегистра Цикл
		ТекСтр.ФизическоеЛицо = Объект.Ссылка;
	КонецЦикла;
	
	НаборЗаписейРегистра.ДополнительныеСвойства.Вставить("НеФормироватьНаименование");
	
	НаборЗаписейРегистра.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФИОПоНаименованию()
	Перем ПоследняяЗапись;
	
	ДатаЗаписи = НачалоДня(ТекущаяДатаСеанса());
	ФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(Объект.Наименование);
	
	Если НаборЗаписейФИОФизЛиц.Количество() > 0 Тогда
		
		ПоследняяЗапись = НаборЗаписейФИОФизЛиц[НаборЗаписейФИОФизЛиц.Количество() - 1];
		
		Если НачалоДня(ПоследняяЗапись.Период) < ДатаЗаписи
		 И (ПоследняяЗапись.Фамилия <> ФИО.Фамилия
		 	ИЛИ ПоследняяЗапись.Имя <> ФИО.Имя
			ИЛИ ПоследняяЗапись.Отчество <> ФИО.Отчество) Тогда
			ПоследняяЗапись = Неопределено; // создадим новую
		КонецЕсли;
		
	Иначе
		
		ДатаЗаписи = ?(ЗначениеЗаполнено(Объект.ДатаРождения), Объект.ДатаРождения, ДатаЗаписи);
		
	КонецЕсли;
	
	Если ПоследняяЗапись = Неопределено Тогда
		
		ПоследняяЗапись = НаборЗаписейФИОФизЛиц.Добавить();
		ПоследняяЗапись.Период = ДатаЗаписи;
		
		УстановитьСвойстваГиперссылкиИсторииФИО(Объект, Элементы, НаборЗаписейФИОФизЛиц.Количество());
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПоследняяЗапись, ФИО);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьИсториюФИО()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФИОФизическихЛиц.Период КАК Период,
	|	ФИОФизическихЛиц.ФизическоеЛицо,
	|	ФИОФизическихЛиц.Фамилия,
	|	ФИОФизическихЛиц.Имя,
	|	ФИОФизическихЛиц.Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|ГДЕ
	|	ФИОФизическихЛиц.ФизическоеЛицо = &ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	НаборЗаписейФИОФизЛиц.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваГиперссылкиИсторииФИО(Объект, Элементы, КоличествоЗаписей)
	
	Если КоличествоЗаписей > 0 Тогда
		Заголовок =	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='История ФИО (%1)'"),
			Формат(КоличествоЗаписей, "ЧГ="));
	Иначе
		Заголовок = НСтр("ru='История ФИО'")		
	КонецЕсли;
	
	Элементы.ИсторияФИО.Заголовок   = Заголовок;
	Элементы.ИсторияФИО.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти
