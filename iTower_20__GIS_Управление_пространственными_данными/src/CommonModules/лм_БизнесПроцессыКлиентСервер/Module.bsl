
#Область ПрограммныйИнтерфейс

Функция СоздатьБизнесПроцессНаОсновании(ИмяКоманды, Предмет = Неопределено) Экспорт
	
	Возврат лм_БизнесПроцессыВызовСервера.СоздатьБизнесПроцессНаОсновании(ИмяКоманды, Предмет);
	
КонецФункции

Функция СтруктураЭлементаКартыМаршрута() Экспорт
	
	Результат = Новый Структура("Шаблон,
								|ИмяЭлемента, 
								|НаименованиеЭлемента, 
								|ИдентификаторЭлемента, 
								|ТипЭлемента, 
								|ЭтоДействие, 
								|ИконкаДействия, 
								|ШаблонПодпроцесса, 
								|ОжидатьЗавершенияПодпроцесса,
								|Исполнитель,
								|ОсновнойОбъектАдресации,
								|ДополнительныйОбъектАдресации,
								|ЗначениеАвтоподстановки,
								|Групповая,
								|ВремяВыполнения,
								|ИспользоватьПочтовыеОповещения,
								|ШаблонСообщения,
								|ДанныеУсловия,
								|ДействияОбработки,
								|ПараметрыОбработки,
								|ПараметрыШаблона,
								|ПараметрыОбъекты,
								|НастройкиОтображения,
								|РасширенныеНастройки,
								|ТипыПредметов,
								|ОбработчикПередСтартом,
								|ОбработчикПослеСтарта,
								|ОбработчикПослеЗавершения");
	Возврат Результат;
	
КонецФункции

Функция ФормаНастройкиДействияОбработки(ТипДействия) Экспорт
	
	Возврат лм_БизнесПроцессыВызовСервера.ФормаНастройкиДействияОбработки(ТипДействия);
	
КонецФункции

Функция ЭтоПредопределенныйТипДействия(ТипДействия) Экспорт
	
	Результат = (ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.ПроизвольныйСценарий")
			ИЛИ ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.СозданиеОбъекта")
			ИЛИ ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.ЗаписьОбъекта") 
			ИЛИ ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.БлокировкаОбъекта")
			ИЛИ ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.РазблокировкаОбъекта")
			ИЛИ ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.ЗаполнениеОбъекта")
			ИЛИ ТипДействия = ПредопределенноеЗначение("Перечисление.лм_ТипыДействийТочкиОбработки.ОтправкаПочтовогоСообщения"));
		 
	Возврат Результат;
	
КонецФункции

Функция РасширенныеНастройкиФормТочекДействия() Экспорт
	
	РасширенныеНастройки = Новый Массив;
	
	Настройка               = лм_БизнесПроцессыКлиентСервер.НовоеОписаниеРасширеннойНастройкиФормы();
	Настройка.Имя           = "Отсутствует";
	Настройка.Наименование  = "Отсутствует";
	Настройка.Идентификатор = "00000000-0000-0000-0000-000000000000";
	
	РасширенныеНастройки.Добавить(Настройка);	
	
	лм_БизнесПроцессыКлиентСерверПереопределяемый.ЗаполнитьРасширенныеНастройки(РасширенныеНастройки);
	
	Возврат РасширенныеНастройки;
	
КонецФункции

Функция НовоеОписаниеРасширеннойНастройкиФормы() Экспорт
		
	НовоеОписание = Новый Структура;
	НовоеОписание.Вставить("Имя",             "");
	НовоеОписание.Вставить("Идентификатор",   "");
	НовоеОписание.Вставить("Наименование",    "");
	НовоеОписание.Вставить("Реквизиты",       Новый Массив);
	
	Возврат НовоеОписание;
	
КонецФункции

Функция НовоеОписаниеРеквизитаРасширеннойНастройкиФормы() Экспорт
	
	Реквизит = Новый Структура;
	Реквизит.Вставить("Имя",                 "");
	Реквизит.Вставить("Наименование",        "");
	Реквизит.Вставить("ТипЗначения",         "");
	Реквизит.Вставить("ЗначениеПоУмолчанию", "");
	
	Возврат Реквизит;
		
КонецФункции

Функция ИмяТаблицыНастроекОтображения() Экспорт
	
	Возврат "лм_НастройкиОтображенияРеквизитовБП";
	
КонецФункции

Процедура НастроитьОтображениеЭлементовФормыЗадачи(Форма) Экспорт
	
	ТаблицаНастроек = Форма[ИмяТаблицыНастроекОтображения()];		
	Для Каждого Стр Из ТаблицаНастроек Цикл
		Если Форма.Элементы.Найти(Стр.ИмяРеквизита) = Неопределено Тогда
			Продолжить;	
		КонецЕсли;
		
		Элемент = Форма.Элементы[Стр.ИмяРеквизита];
		Если Стр.Видимость <> 2 Тогда
			Элемент.Видимость = Стр.Видимость;
		КонецЕсли;
		Если Стр.Доступность <> 2 Тогда
			Элемент.Доступность = Стр.Доступность;
		КонецЕсли;
		Если Стр.Обязательность <> 2 Тогда
			Элемент.АвтоОтметкаНезаполненного = Стр.Обязательность;
			Элемент.ОтметкаНезаполненного = Элемент.АвтоОтметкаНезаполненного;
		КонецЕсли;
		
		Если Стр.ТолькоПросмотр = 1 Тогда
			Если (ТипЗнч(Элемент.Родитель) = Тип("ТаблицаФормы") ИЛИ ТипЗнч(Элемент.Родитель) = Тип("ГруппаФормы"))
				 И ТипЗнч(Элемент) <> Тип("ТаблицаФормы") Тогда
				Элемент.РедактированиеТекста = Ложь;
				Элемент.КнопкаВыпадающегоСписка = Ложь;
				Элемент.КнопкаВыбора = Ложь;
				Элемент.КнопкаОчистки = Ложь;
				Элемент.КнопкаРегулирования = Ложь;
				Элемент.КнопкаСоздания = Ложь;
				Элемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
			Иначе
				Элемент.ТолькоПросмотр = Стр.ТолькоПросмотр;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#КонецОбласти