
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Проверка защиты конфигурации 
	//Если Не гисСлкМенедежерЗащиты.ПроверитьЛицензиюСеанса(СообщениеОбОшибке) Тогда
	//	Элементы.СтраницаГеоОбъекты.Видимость = Ложь;
	//	Элементы.СтраницаСлоиКарты.Видимость = Ложь;
	//	Возврат;
	//КонецЕсли;
	
	// Установка базовых слоев
	БазовыйСлой = Элементы.БазовыйСлой.СписокВыбора[0].Значение;
	БазовыйСлойНепрозрачность = 100;
	
	// Космоснимки
	КлючКосмоснимки = Константы.гисКлючДляБазовыхСлоевКосмоснимки.Получить();
	Если ЗначениеЗаполнено(КлючКосмоснимки) Тогда
		Элементы.БазовыйСлой.СписокВыбора.Добавить("Kosmosnimki_ru_map", "Космоснимки.ру Карта");
		Элементы.БазовыйСлой.СписокВыбора.Добавить("Kosmosnimki_ru_satellite", "Космоснимки.ру Снимки");
		Элементы.БазовыйСлой.СписокВыбора.Добавить("Kosmosnimki_ru_relief", "Космоснимки.ру Рельеф");
	КонецЕсли;
	
	// Яндекс
	КлючЯндекс = Константы.гисКлючДляБазовыхСлоевЯндекс.Получить();
	Если КлючЯндекс Тогда
		Элементы.БазовыйСлой.СписокВыбора.Добавить("yandex#map", "Яндекс.Карта");
		Элементы.БазовыйСлой.СписокВыбора.Добавить("yandex#satellite", "Яндекс.Спутник");
		Элементы.БазовыйСлой.СписокВыбора.Добавить("yandex#hybrid", "Яндекс.Гибрид");
	КонецЕсли;
	
	// ArcGIS
	КлючArcgis = Константы.гисКлючДляБазовыхСлоевArcgis.Получить();
	Если КлючArcgis Тогда
		Элементы.БазовыйСлой.СписокВыбора.Добавить("ArcGIS_World_Imagery", "ArcGIS Online Космоснимок");
		Элементы.БазовыйСлой.СписокВыбора.Добавить("ArcGIS_World_Street_Map", "ArcGIS Online Карта");
	КонецЕсли;
	
	СлоиКартыЗаполнить();
	
	// Роли и права на элементы формы
	Если Не Пользователи.ЭтоПолноправныйПользователь(Пользователи.ТекущийПользователь()) Тогда
		Элементы.ГруппаТематика.Видимость						= ПравоДоступа("Чтение", Метаданные.Справочники.гисПоказатели);
		Элементы.СтраницаГеоОбъектыОбъекты.Видимость			= ПравоДоступа("Чтение", Метаданные.Справочники.гисОбъектыКарты);
		Элементы.СтраницаКадастровыеЗемельныеУчастки.Видимость	= ПравоДоступа("Чтение", метаданные.Справочники.гисКадастровыеЗемельныеУчастки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//#Если ВебКлиент Тогда
	//	
	//	ПоказатьПредупреждение(, "Работа в веб-клиенте не поддерживается!");
	//	Отказ = Истина;
	//	
	//#Иначе
		
		Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
			ПоказатьПредупреждение(, СообщениеОбОшибке);
			Отказ = Истина;
		Иначе
			гисРаботаСКартойКлиент.ПубликацияПриОткрытии();
		КонецЕсли;
		
	//#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "КартаПоказатьОбъект" Тогда
		ПоказатьОбъект(Параметр);
	ИначеЕсли ИмяСобытия = "КартаПоказатьУчасток" Тогда
		ПоказатьУчасток(Параметр);
	ИначеЕсли ИмяСобытия = "КартыРесурсыАктуализированы" Тогда
		Карта = Параметр;
		ПодключитьОбработчикОжидания("ПроверитьИнициализацию", 1);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийЭлементовШапкиФормыЗакладкаОбъекты

// командная панель

&НаКлиенте
Процедура ОбъектыКартыСкрытьСКартыВсе(Команда)
	МассивСлоев = гисРаботаСКартойКлиент.ОбъектыУдалитьСКарты(ЭтотОбъект, , "гисОбъектыКарты");
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыПозиционирование(Команда)
	Элементы.ОбъектыКартыПозиционирование.Пометка = Не Элементы.ОбъектыКартыПозиционирование.Пометка;
	гисРаботаСКартойКлиент.КонтурныеОбъектыПозиционироваться(ЭтотОбъект, ПолучитьРежимПозиционирования());
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыФильтр(Команда)
	ПараметрыФормы = Новый Структура("Фильтр", ОбъектыКартыФильтр);
	ОткрытьФорму("Обработка.гисКарта.Форма.ФормаФильтрОбъектыКарты", ПараметрыФормы, , , , , Новый ОписаниеОповещения("ОбъектыКартыФильтрЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыФильтрЗавершение(ВозвращаемоеЗначение, ДополнительныеПараметры) Экспорт
	Если ВозвращаемоеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектыКартыФильтр = ВозвращаемоеЗначение;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "Слой.ТипГеометрии", ОбъектыКартыФильтр.ТипГеометрии, , , ЗначениеЗаполнено(ОбъектыКартыФильтр.ТипГеометрии));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "Слой", ОбъектыКартыФильтр.Слой, , , ЗначениеЗаполнено(ОбъектыКартыФильтр.Слой));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "Наименование", ОбъектыКартыФильтр.ГеоОбъектНаименование, ВидСравненияКомпоновкиДанных.Содержит, , ЗначениеЗаполнено(ОбъектыКартыФильтр.ГеоОбъектНаименование));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "НеГеоОбъект", ОбъектыКартыФильтр.ГеоОбъект = 2, , , ЗначениеЗаполнено(ОбъектыКартыФильтр.ГеоОбъект));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "Слой.СправочникОбъектовУчета", ОбъектыКартыФильтр.СправочникОУ, , , ЗначениеЗаполнено(ОбъектыКартыФильтр.СправочникОУ));

	ГеоОбъектВидСравнения = ВидСравненияКомпоновкиДанных[ОбъектыКартыФильтр.ГеоОбъектВидСравнения];
	ГеоОбъектПравоеЗначение = Неопределено;
	Если ГеоОбъектВидСравнения = ВидСравненияКомпоновкиДанных.Равно Или ГеоОбъектВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Или
		ГеоОбъектВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии Или ГеоОбъектВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		ГеоОбъектПравоеЗначение = ОбъектыКартыФильтр.ГеоОбъектРавно;
	Иначе
		ГеоОбъектПравоеЗначение = ОбъектыКартыФильтр.ГеоОбъектВСписке;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "Ссылка", ГеоОбъектПравоеЗначение, ГеоОбъектВидСравнения, , ЗначениеЗаполнено(ГеоОбъектПравоеЗначение));
	
	ОбъектУчетаВидСравнения = ВидСравненияКомпоновкиДанных[ОбъектыКартыФильтр.ОбъектУчетаВидСравнения];
	ОбъектУчетаПравоеЗначение = Неопределено;
	Если ОбъектУчетаВидСравнения = ВидСравненияКомпоновкиДанных.Равно Или ОбъектУчетаВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Или
		ОбъектУчетаВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии Или ОбъектУчетаВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		ОбъектУчетаПравоеЗначение = ОбъектыКартыФильтр.ОбъектУчетаРавно;
	Иначе
		ОбъектУчетаПравоеЗначение = ОбъектыКартыФильтр.ОбъектУчетаВСписке;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ОбъектыКарты, "ОбъектУчета", ОбъектУчетаПравоеЗначение, ОбъектУчетаВидСравнения, , ЗначениеЗаполнено(ОбъектУчетаПравоеЗначение));
	
	Если ЗначениеЗаполнено(ОбъектыКартыФильтр.ТипГеометрии) Или ЗначениеЗаполнено(ОбъектыКартыФильтр.Слой) Или
		ЗначениеЗаполнено(ОбъектыКартыФильтр.ГеоОбъектНаименование) Или ЗначениеЗаполнено(ОбъектыКартыФильтр.ГеоОбъект) Или
		ЗначениеЗаполнено(ГеоОбъектПравоеЗначение) Или ЗначениеЗаполнено(ОбъектыКартыФильтр.СправочникОУ) Или
		ЗначениеЗаполнено(ОбъектУчетаПравоеЗначение) Тогда
		
		Элементы.ОбъектыКарты.Отображение = ОтображениеТаблицы.Список;
		Элементы.ОбъектыКартыФильтр.Пометка = Истина;
	Иначе 
		Элементы.ОбъектыКарты.Отображение = ОтображениеТаблицы.Дерево;
		Элементы.ОбъектыКартыФильтр.Пометка = Ложь;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПоискПоАдресу(Команда)
	ОткрытьФорму("Обработка.гисКарта.Форма.ФормаПоискаПоАдресу", , ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

// контекстное меню

&НаКлиенте
Процедура ОбъектыКартыПриблизитьКОбъекту(Команда)
	ТекущаяСтрока = Элементы.ОбъектыКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоТочка(ТекущаяСтрока.Ссылка) Тогда
		МассивСлоев = гисРаботаСКартойКлиент.ТочечныеОбъектыДобавитьНаКарту(ЭтотОбъект, ТекущаяСтрока.Ссылка, СлоиКартыПолучитьДеревоСлоев());
		СлоиКартыОбновитьПометки(МассивСлоев);
		
		гисРаботаСКартойКлиент.ТочечныеОбъектыПриблизить(ЭтотОбъект, ТекущаяСтрока.Широта, ТекущаяСтрока.Долгота);
	ИначеЕсли ЭтоКонтур(ТекущаяСтрока.Ссылка) Тогда
		МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, ТекущаяСтрока.Ссылка, СлоиКартыПолучитьДеревоСлоев());
		СлоиКартыОбновитьПометки(МассивСлоев);
		
		гисРаботаСКартойКлиент.КонтурныеОбъектыПриблизить(ЭтотОбъект, ТекущаяСтрока.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыДобавитьНаКарту(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСлоев = гисРаботаСКартойКлиент.ОбъектыДобавитьНаКарту(ЭтотОбъект, Элементы.ОбъектыКарты.ВыделенныеСтроки, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыДобавитьНаКартуСПодчиненными(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = ОбъектыКартыПолучитьПодчиненныеОбъекты(Элементы.ОбъектыКарты.ТекущиеДанные.Ссылка);
	МассивСлоев = гисРаботаСКартойКлиент.ОбъектыДобавитьНаКарту(ЭтотОбъект, МассивОбъектов, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыСкрытьСКарты(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСлоев = гисРаботаСКартойКлиент.ОбъектыУдалитьСКарты(ЭтотОбъект, Элементы.ОбъектыКарты.ВыделенныеСтроки);
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыРедактироватьНаКарте(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.ОбъектыКарты.ТекущиеДанные;
	Если ЭтоКонтур(ТекущаяСтрока.Ссылка) ИЛИ ЭтоТочка(ТекущаяСтрока.Ссылка) Тогда
		гисРаботаСКартойКлиент.ОбъектыКартыВключитьРедактирование(ЭтотОбъект, ТекущаяСтрока.Ссылка);
	Иначе
		// TODO: возможно, нужно ругнуться
	КонецЕсли;
КонецПроцедуры

// контекстное меню: слои

&НаКлиенте
Процедура ОбъектыКартыВключитьСлой(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИдентификаторСтрокиДереваСлоев = СлоиКартыНайтиСтрокуДерева(Элементы.ОбъектыКарты.ТекущиеДанные.Слой);
	Если ИдентификаторСтрокиДереваСлоев <> Неопределено Тогда
		Элементы.СлоиКарты.ТекущаяСтрока = ИдентификаторСтрокиДереваСлоев;
		Элементы.СлоиКарты.ТекущиеДанные.Пометка = 1;
		Элементы.СлоиКарты.ТекущиеДанные.ПометкаПредыдущая = 0;
		СлоиКартыПометкаПриИзменении(Элементы.СлоиКарты);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыКартыВыключитьСлой(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтрокиДереваСлоев = СлоиКартыНайтиСтрокуДерева(Элементы.ОбъектыКарты.ТекущиеДанные.Слой);
	Если ИдентификаторСтрокиДереваСлоев <> Неопределено Тогда
		Элементы.СлоиКарты.ТекущаяСтрока = ИдентификаторСтрокиДереваСлоев;
		Элементы.СлоиКарты.ТекущиеДанные.Пометка = 0;
		Элементы.СлоиКарты.ТекущиеДанные.ПометкаПредыдущая = 1;
		СлоиКартыПометкаПриИзменении(Элементы.СлоиКарты);
	КонецЕсли;
КонецПроцедуры

// контекстное меню: тематика

&НаКлиенте
Процедура ОбъектыТематикаДобавитьНаКарту(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.ОбъектыКарты.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.Слой) Тогда
		Возврат;
	КонецЕсли;
	
	// найти текущую строку в дереве слоев, взять оттуда показатель и дату
	ИдентификаторСтрокиСлоев = СлоиКартыНайтиСтрокуДерева(ТекущаяСтрока.Слой);
	СтрокаСлоев = СлоиКарты.НайтиПоИдентификатору(ИдентификаторСтрокиСлоев);
	
	ПараметрыФормы		= Новый Структура("Показатель,Дата,Слой", СтрокаСлоев.Показатель, СтрокаСлоев.Дата, ТекущаяСтрока.Слой);
	Параметрыобработчика= Новый Структура("Объект,ИдентификаторСтрокиСлоев", ТекущаяСтрока.Ссылка, ИдентификаторСтрокиСлоев);
	Обработчик			= Новый ОписаниеОповещения("ОбъектыТематикаДобавитьНаКартуЗавершение", ЭтотОбъект, Параметрыобработчика);
	ОткрытьФорму("Обработка.гисКарта.Форма.ФормаПараметрыТематики", ПараметрыФормы, , , , , Обработчик, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыТематикаДобавитьНаКартуЗавершение(ВозвращаемоеЗначение, ДополнительныеПараметры) Экспорт
	Если ВозвращаемоеЗначение = Неопределено Или ВозвращаемоеЗначение = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаСлоев = СлоиКарты.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтрокиСлоев);
	СтрокаСлоев.Показатель = ВозвращаемоеЗначение.Показатель;
	СтрокаСлоев.Дата = ВозвращаемоеЗначение.Дата;
	
	Если СтрокаСлоев = Элементы.СлоиКарты.ТекущиеДанные Тогда
		СлоиКартыПриАктивизацииСтроки(Элементы.СлоиКарты);
	КонецЕсли;
	
	гисРаботаСКартойКлиент.ОбъектыУдалитьСКарты(ЭтотОбъект, ДополнительныеПараметры.Объект);
	
	МассивСлоев = гисРаботаСКартойКлиент.ОбъектыДобавитьНаКарту(ЭтотОбъект, ДополнительныеПараметры.Объект, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры


&НаКлиенте
Процедура ОбъектыТематикаУдалитьСКарты(Команда)
	Если Элементы.ОбъектыКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.ОбъектыКарты.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.Слой) Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтрокиСлоев = СлоиКартыНайтиСтрокуДерева(ТекущаяСтрока.Слой);
	СтрокаСлоев = СлоиКарты.НайтиПоИдентификатору(ИдентификаторСтрокиСлоев);
	СтрокаСлоев.Показатель = Неопределено;
	СтрокаСлоев.Дата = Дата("00010101");
	
	МассивСлоев = гисРаботаСКартойКлиент.ОбъектыУдалитьСКарты(ЭтотОбъект, ТекущаяСтрока.Ссылка);
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

// таблица объектов

&НаКлиенте
Процедура ОбъектыКартыПриАктивизацииСтроки(Элемент)
	Если Элементы.ОбъектыКартыПозиционирование.Пометка Тогда
		Если НеПозиционироватьсяОбъектыКарты Тогда
			НеПозиционироватьсяОбъектыКарты = Ложь;
		Иначе
			ТекущаяСтрока = Элементы.ОбъектыКарты.ТекущиеДанные;
			Если ЭтоТочка(ТекущаяСтрока.Ссылка) Тогда
				МассивСлоев = гисРаботаСКартойКлиент.ТочечныеОбъектыДобавитьНаКарту(ЭтотОбъект, ТекущаяСтрока.Ссылка, СлоиКартыПолучитьДеревоСлоев());
				СлоиКартыОбновитьПометки(МассивСлоев);
				
				гисРаботаСКартойКлиент.ТочечныеОбъектыСпозиционироваться(ЭтотОбъект, ТекущаяСтрока.Широта, ТекущаяСтрока.Долгота);
				гисРаботаСКартойКлиент.ТочечныеОбъектыАнимацияВТочке(ЭтотОбъект, ТекущаяСтрока.Широта, ТекущаяСтрока.Долгота);
			ИначеЕсли ЭтоКонтур(ТекущаяСтрока.Ссылка) Тогда
				МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, ТекущаяСтрока.Ссылка, СлоиКартыПолучитьДеревоСлоев());
				СлоиКартыОбновитьПометки(МассивСлоев);
				
				гисРаботаСКартойКлиент.КонтурныеОбъектыСпозиционироваться(ЭтотОбъект, ТекущаяСтрока.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормыЗакладкаКадастровыеЗемельныеУчастки

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиУдалитьСКартыВсе(Команда)
	гисРаботаСКартойКлиент.РосреестрПодсветкаУбрать(ЭтотОбъект);
	МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыУдалитьСКарты(ЭтотОбъект, , "гисКадастровыеЗемельныеУчастки");
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиПозиционирование(Команда)
	Элементы.КадастровыеЗемельныеУчасткиПозиционирование.Пометка = Не Элементы.КадастровыеЗемельныеУчасткиПозиционирование.Пометка;
	гисРаботаСКартойКлиент.КонтурныеОбъектыПозиционироваться(ЭтотОбъект, ПолучитьРежимПозиционирования());
КонецПроцедуры


&НаКлиенте
Процедура ПоискПоКадастровомуНомеру(Команда)
	ОткрытьФорму("Обработка.гисКарта.Форма.ФормаПоискаПоКадастровомуНомеру", , ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиПриблизитьКОбъекту(Команда)
	Если Элементы.КадастровыеЗемельныеУчастки.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные;
	
	МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, ТекущаяСтрока.Ссылка, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
	
	гисРаботаСКартойКлиент.КонтурныеОбъектыПриблизить(ЭтотОбъект, ТекущаяСтрока.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиДобавитьНаКарту(Команда)
	Если Элементы.КадастровыеЗемельныеУчастки.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, Элементы.КадастровыеЗемельныеУчастки.ВыделенныеСтроки, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиДобавитьНаКартуСПодчиненными(Команда)
	Если Элементы.КадастровыеЗемельныеУчастки.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = КадастровыеЗемельныеУчасткиПолучитьПодчиненныеОбъекты(Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные.Ссылка);
	МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, МассивОбъектов, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиУдалитьСКарты(Команда)
	Если Элементы.КадастровыеЗемельныеУчастки.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыУдалитьСКарты(ЭтотОбъект, Элементы.КадастровыеЗемельныеУчастки.ВыделенныеСтроки);
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиПоказатьВсеОбъектыДокумента(Команда)
	Если Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = КадастровыеЗемельныеУчасткиПолучитьВсеОбъектыДокумента(Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные.Ссылка);
	МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, МассивОбъектов, СлоиКартыПолучитьДеревоСлоев());
	СлоиКартыОбновитьПометки(МассивСлоев);
КонецПроцедуры

&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиПоказатьСПубличнойКарты(Команда)
	Если Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущаяСтрока = Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные;
	
	гисРаботаСКартойКлиент.РосреестрПодсветкаПоКадастровомуНомеру(ЭтотОбъект, ТекущаяСтрока.КадастровыйНомер);
	
	Попытка
		ОбъектПоиска = гисРаботаСКадастром.ПолучитьFeatures(ТекущаяСтрока.КадастровыйНомер);
		Центр = гисГисСервер.ПеревестиМеркаторВWgs84(ОбъектПоиска.center.x, ОбъектПоиска.center.y);
		гисРаботаСКартойКлиент.ТочечныеОбъектыСпозиционироваться(ЭтотОбъект, Центр.Широта, Центр.Долгота);
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось спозиционироваться на участке!'"));
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура КадастровыеЗемельныеУчасткиПриАктивизацииСтроки(Элемент)
	Если Элементы.КадастровыеЗемельныеУчасткиПозиционирование.Пометка Тогда
		Если НеПозиционироватьсяКадастровыеЗемельныеУчастки Тогда
			НеПозиционироватьсяКадастровыеЗемельныеУчастки = Ложь;
		Иначе
			МассивСлоев = гисРаботаСКартойКлиент.КонтурныеОбъектыДобавитьНаКарту(ЭтотОбъект, Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные.Ссылка, СлоиКартыПолучитьДеревоСлоев());
			СлоиКартыОбновитьПометки(МассивСлоев);
			
			гисРаботаСКартойКлиент.КонтурныеОбъектыСпозиционироваться(ЭтотОбъект, Элементы.КадастровыеЗемельныеУчастки.ТекущиеДанные.Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормыЗакладкаСлоиКарты

&НаКлиенте
Процедура БазовыйСлойПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(БазовыйСлой) Тогда
		БазовыйСлой = Элементы.БазовыйСлой.СписокВыбора[0].Значение;
	КонецЕсли;
	гисРаботаСКартойКлиент.СлоиБазовыйСлойИзменить(ЭтотОбъект, БазовыйСлой);
КонецПроцедуры

&НаКлиенте
Процедура БазовыйСлойНепрозрачностьПриИзменении(Элемент)
	гисРаботаСКартойКлиент.СлоиБазовыйСлойНепрозрачностьИзменить(ЭтотОбъект, БазовыйСлойНепрозрачность);
КонецПроцедуры


&НаКлиенте
Процедура СлоиКартыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СлоиКартыСсылка" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элементы.СлоиКарты.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СлоиКартыПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя = "СлоиКартыНепрозрачность" Тогда
		Если Элементы.СлоиКарты.ТекущиеДанные.ЭтоГруппа Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СлоиКартыПриАктивизацииСтроки(Элемент)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		ТематикаПоказатель	= Неопределено;
		ТематикаДата		= Неопределено;
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.ЭтоГруппа Или ТекущаяСтрока.ТипСлоя <> ПредопределенноеЗначение("Перечисление.гисТипыСлоев.ПоСправочникуОбъектыКарты") Тогда
		ТекущаяСтрока.ТематикаДоступна = Ложь;
		ТематикаПоказатель = Неопределено;
		ТематикаДата = Неопределено;
		
		Элементы.ТематикаПоказатель.РедактированиеТекста= Ложь;
		Элементы.ТематикаДата.РедактированиеТекста		= Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.ТематикаДоступна = Истина;
	ТематикаПоказатель = ТекущаяСтрока.Показатель;
	ТематикаДата = ТекущаяСтрока.Дата;
	
	Элементы.ТематикаПоказатель.РедактированиеТекста= Истина;
	Элементы.ТематикаДата.РедактированиеТекста		= Истина;
	
	Если Не ЗначениеЗаполнено(ТематикаДата) Тогда
		ТематикаДата = ТекущаяДата();
		ТекущаяСтрока.Дата = ТематикаДата;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СлоиКартыПометкаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока.ПометкаПредыдущая = 0 Тогда
		ТекущаяСтрока.Пометка = 1;
		ТекущаяСтрока.ПометкаПредыдущая = 1;
	Иначе
		ТекущаяСтрока.Пометка = 0;
		ТекущаяСтрока.ПометкаПредыдущая = 0;
	КонецЕсли;
	
	МассивСлоев = СлоиКартыУстановитьЗначениеПометкиРекурсивно(ТекущаяСтрока.ПолучитьЭлементы(), ТекущаяСтрока.Пометка);
	МассивСлоев.Добавить(ТекущаяСтрока.Ссылка);
	СлоиКартыОбновитьЗначениеПометкиПоГруппамВверхРекурсивно(ТекущаяСтрока.ПолучитьРодителя());
	
	Если ТекущаяСтрока.Пометка = 1 Тогда
		ДеревоСлоев = СлоиКартыПолучитьДеревоСлоев();
		МассивСлоевДляАктуализацииГалочек = Новый Массив;
		МассивДляУстановкиНепрозрачности = Новый Массив;
		Для Каждого Слой Из МассивСлоев Цикл
			гисРаботаСКартойКлиент.СлоиУдалитьСКарты(ЭтотОбъект, Слой);
			Массив = гисРаботаСКартойКлиент.СлоиДобавитьНаКарту(ЭтотОбъект, Слой, ДеревоСлоев);
			Если ТипЗнч(Массив) = Тип("Массив") И Массив.Количество() = 1 Тогда
				МассивСлоевДляАктуализацииГалочек.Добавить(Массив[0]);
			Иначе
				МассивДляУстановкиНепрозрачности.Добавить(Слой);
			КонецЕсли;
		КонецЦикла;
		СлоиКартыОбновитьПометки(МассивСлоевДляАктуализацииГалочек, МассивДляУстановкиНепрозрачности);
		Если ЗначениеЗаполнено(ТекущаяСтрока.Показатель) И ЗначениеЗаполнено(ТекущаяСтрока.Дата) Тогда
			ТекущаяСтрока.КартинкаТематика = БиблиотекаКартинок.гисТематикаПостроена;
		Иначе
			ТекущаяСтрока.КартинкаТематика = Новый Картинка;
		КонецЕсли;
	ИначеЕсли ТекущаяСтрока.Пометка = 0 Тогда
		Для Каждого Слой Из МассивСлоев Цикл
			гисРаботаСКартойКлиент.СлоиУдалитьСКарты(ЭтотОбъект, Слой);
		КонецЦикла;
		ТекущаяСтрока.КартинкаТематика = Новый Картинка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СлоиКартыНепрозрачностьПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	гисРаботаСКартойКлиент.СлоиКартыИзменитьНепрозрачность(ЭтотОбъект, ТекущаяСтрока.Ссылка, ТекущаяСтрока.Непрозрачность);
КонецПроцедуры

&НаКлиенте
Процедура СлоиКартыОбновить(Команда)
	// запоминаем текущий слой
	ТекущийСлой = Неопределено;
	Если Элементы.СлоиКарты.ТекущиеДанные <> Неопределено Тогда
		ТекущийСлой = Элементы.СлоиКарты.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	// выполняем перезаполнение дерева
	СлоиКартыЗаполнить();
	
	Если ТекущийСлой <> Неопределено Тогда
		// устанавливаем текущую строку на текущий слой
		ИдентификаторТекущейСтроки = СлоиКартыНайтиСтрокуДерева(ТекущийСлой);
		Элементы.СлоиКарты.ТекущаяСтрока = ИдентификаторТекущейСтроки;
	КонецЕсли;
	
	// перезаполняем пометки по дереву
	Для Каждого ЭлементДерева Из СлоиКарты.ПолучитьЭлементы() Цикл
		Если ЭлементДерева.ЭтоГруппа Тогда
			Пометка = СлоиКартыОбновитьЗначениеПометкиПоГруппамВнизРекурсивно(ЭлементДерева.ПолучитьЭлементы());
			ЭлементДерева.Пометка = Пометка;
			ЭлементДерева.ПометкаПредыдущая = Пометка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СлоиКартыВсеВключить(Команда)
	ДеревоСлоев = СлоиКартыПолучитьДеревоСлоев();
	
	МассивСлоев = СлоиКартыУстановитьЗначениеПометкиРекурсивно(СлоиКарты.ПолучитьЭлементы(), Истина);
	МассивСлоевДляАктуализацииГалочек = Новый Массив;
	МассивДляУстановкиНепрозрачности = Новый Массив;
	Для Каждого Слой Из МассивСлоев Цикл
		гисРаботаСКартойКлиент.СлоиУдалитьСКарты(ЭтотОбъект, Слой);
		Массив = гисРаботаСКартойКлиент.СлоиДобавитьНаКарту(ЭтотОбъект, Слой, ДеревоСлоев);
		Если ТипЗнч(Массив) = Тип("Массив") И Массив.Количество() = 1 Тогда
			МассивСлоевДляАктуализацииГалочек.Добавить(Массив[0]);
		Иначе
			МассивДляУстановкиНепрозрачности.Добавить(Слой);
		КонецЕсли;
	КонецЦикла;
	СлоиКартыОбновитьПометки(МассивСлоевДляАктуализацииГалочек, МассивДляУстановкиНепрозрачности);
КонецПроцедуры

&НаКлиенте
Процедура СлоиКартыВсеВыключить(Команда)
	МассивСлоев = СлоиКартыУстановитьЗначениеПометкиРекурсивно(СлоиКарты.ПолучитьЭлементы(), Ложь);
	Для Каждого Слой Из МассивСлоев Цикл
		гисРаботаСКартойКлиент.СлоиУдалитьСКарты(ЭтотОбъект, Слой);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СлоиКартыСохранитьНастройки(Команда)
	Экстент = гисРаботаСКартойКлиент.КартаЭкстентПолучить(ЭтотОбъект);
	гисРаботаСКартойСервер.КартаЭкстентСохранить(Экстент);
КонецПроцедуры


&НаКлиенте
Процедура СлоиКартыПриблизить(Команда)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Или ТекущаяСтрока.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	гисРаботаСКартойКлиент.СлоиПриблизить(ЭтотОбъект, ТекущаяСтрока.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура СлоиКартыРедактировать(Команда)
	Если Элементы.СлоиКарты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	гисРаботаСКартойКлиент.ОбъектыКартыВключитьРедактирование(ЭтотОбъект, Элементы.СлоиКарты.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СлоиКартыПерейтиВГеоОбъектыСФильтрацией(Команда)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Или ТекущаяСтрока.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СлоиПоТаблицеОбъектыКарты(ТекущаяСтрока.Ссылка) Тогда
		ПоказатьПредупреждение(, "Слой должен быть по справочнику ""Объекты карты""!");
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаПанельУправления.ТекущаяСтраница = Элементы.СтраницаГеоОбъекты;
	Элементы.СтраницыГеоОбъекты.ТекущаяСтраница = Элементы.СтраницаГеоОбъектыОбъекты;
	
	НовоеЗначениеФильтра = Новый Структура;
	НовоеЗначениеФильтра.Вставить("ТипГеометрии", Неопределено);
	НовоеЗначениеФильтра.Вставить("Слой", ТекущаяСтрока.Ссылка);
	НовоеЗначениеФильтра.Вставить("ГеоОбъектВидСравнения", "Равно");
	НовоеЗначениеФильтра.Вставить("ГеоОбъектРавно", Неопределено);
	НовоеЗначениеФильтра.Вставить("ГеоОбъектВСписке", Неопределено);
	НовоеЗначениеФильтра.Вставить("ГеоОбъектНаименование", Неопределено);
	НовоеЗначениеФильтра.Вставить("ГеоОбъект", Неопределено);
	НовоеЗначениеФильтра.Вставить("СправочникОУ", Неопределено);
	НовоеЗначениеФильтра.Вставить("ОбъектУчетаВидСравнения", "Равно");
	НовоеЗначениеФильтра.Вставить("ОбъектУчетаРавно", Неопределено);
	НовоеЗначениеФильтра.Вставить("ОбъектУчетаВСписке", Неопределено);
	ОбъектыКартыФильтрЗавершение(НовоеЗначениеФильтра, Новый Структура);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормыЗакладкаТематика

&НаКлиенте
Процедура ТематикаПоказательПриИзменении(Элемент)
	Если ТематикаПоказатель.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока.ТипСлоя <> ПредопределенноеЗначение("Перечисление.гисТипыСлоев.ПоСправочникуОбъектыКарты") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Показатель = ТематикаПоказатель;
КонецПроцедуры

&НаКлиенте
Процедура ТематикаПоказательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если Не ТекущаяСтрока.ТематикаДоступна Или ТекущаяСтрока.ЭтоГруппа 
			Или ТекущаяСтрока.ТипСлоя <> ПредопределенноеЗначение("Перечисление.гисТипыСлоев.ПоСправочникуОбъектыКарты") Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		НовыйПараметр = Новый ПараметрВыбора("СлойКарты", ТекущаяСтрока.Ссылка);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТематикаПоказательОчистка(Элемент, СтандартнаяОбработка)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Показатель = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ТематикаПоказательОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ТематикаПоказатель) Тогда
		ОткрытьФорму("Справочник.гисПоказатели.ФормаОбъекта", Новый Структура("Ключ,СлойКарты", ТематикаПоказатель, Элементы.СлоиКарты.ТекущиеДанные.Ссылка));
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТематикаДатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущаяСтрока = Элементы.СлоиКарты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Или Не ТекущаяСтрока.ТематикаДоступна 
		Или ТекущаяСтрока.ЭтоГруппа Или ТекущаяСтрока.ТипСлоя <> ПредопределенноеЗначение("Перечисление.гисТипыСлоев.ПоСправочникуОбъектыКарты") Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТематикаДобавитьНаКарту(Команда)
	Если Элементы.СлоиКарты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТематикаПоказатель) И ЗначениеЗаполнено(ТематикаДата) Тогда
		Элементы.СлоиКарты.ТекущиеДанные.Показатель = ТематикаПоказатель;
		Элементы.СлоиКарты.ТекущиеДанные.Дата = ТематикаДата;
		Элементы.СлоиКарты.ТекущиеДанные.Пометка = 1;
		Элементы.СлоиКарты.ТекущиеДанные.ПометкаПредыдущая = 0;
		СлоиКартыПометкаПриИзменении(Элементы.СлоиКарты);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТематикаУдалитьСКарты(Команда)
	Если Элементы.СлоиКарты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СлоиКарты.ТекущиеДанные.Пометка = 0;
	Элементы.СлоиКарты.ТекущиеДанные.ПометкаПредыдущая = 1;
	СлоиКартыПометкаПриИзменении(Элементы.СлоиКарты);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ФормаСкрытьПанельУправления(Команда)
	Элементы.ФормаСкрытьПанельУправления.Пометка = Не Элементы.ФормаСкрытьПанельУправления.Пометка;
	Элементы.ГруппаПанельУправления.Видимость = Не Элементы.ФормаСкрытьПанельУправления.Пометка;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункцииИнициализация

&НаКлиенте
Процедура ПроверитьИнициализацию()
	Попытка
		ИнициализацияПройдена = Элементы.Карта.document.defaultView.initCompleted_1C;
		Если ИнициализацияПройдена = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Исключение
		Если КартаИнициализированаСчетчик < 15 Тогда
			КартаИнициализированаСчетчик = КартаИнициализированаСчетчик + 1;
		Иначе
			ОтключитьОбработчикОжидания("ПроверитьИнициализацию");
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Ошибка инициализации карты!'; en = 'Map initialization failed!'"));
		КонецЕсли;
		Возврат;
	КонецПопытки;

	Если ИнициализацияПройдена Тогда
		ОтключитьОбработчикОжидания("ПроверитьИнициализацию");
		
		Если Не КартаИнициализирована Тогда
			КартаИнициализирована = Истина;
			ДобавитьОбработчик Элементы.Карта.document.onclick, ПриЛевомКликеНаКарте;
			Инициализация();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Инициализация()
	Экстент = гисРаботаСКартойСервер.КартаЭкстентПолучить();
	Если Экстент <> Неопределено Тогда
		гисРаботаСКартойКлиент.КартаЭкстентУстановить(ЭтотОбъект, Экстент);
	КонецЕсли;
	
	гисРаботаСКартойКлиент.КартаПараметрыИнициализацииУстановить(ЭтотОбъект, КлючКосмоснимки, КлючЯндекс, КлючArcgis);
	
	ПоказатьОбъект(Параметры.ОбъектКарты);
	ПоказатьУчасток(Параметры.Участок);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОбъект(ОбъектКарты)
	Если ЗначениеЗаполнено(ОбъектКарты) Тогда
		Элементы.ГруппаПанельУправления.ТекущаяСтраница = Элементы.СтраницаГеоОбъекты;
		Элементы.СтраницыГеоОбъекты.ТекущаяСтраница = Элементы.СтраницаГеоОбъектыОбъекты;
		Элементы.ОбъектыКарты.ТекущаяСтрока = ОбъектКарты;
		ОбъектыКартыПриблизитьКОбъекту(Команды.ОбъектыКартыПриблизитьКОбъекту);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьУчасток(Участок)
	Если ЗначениеЗаполнено(Участок) Тогда
		Элементы.ГруппаПанельУправления.ТекущаяСтраница = Элементы.СтраницаГеоОбъекты;
		Элементы.СтраницыГеоОбъекты.ТекущаяСтраница = Элементы.СтраницаКадастровыеЗемельныеУчастки;
		Элементы.КадастровыеЗемельныеУчастки.ТекущаяСтрока = Участок;
		КадастровыеЗемельныеУчасткиПриблизитьКОбъекту(Команды.КадастровыеЗемельныеУчасткиПриблизитьКОбъекту);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЛевомКликеНаКарте(Параметр)
	data = Параметр.data;

	Если Не ЗначениеЗаполнено(data) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		СтруктураДанных = гисРаботаСJson.ПрочитатьНативно(data);
		
		Статус = СтруктураДанных.status;
		Если Статус <> "ok" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтруктураДанных.message);
			Возврат;
		КонецЕсли;
		Событие = СтруктураДанных.event;
		Данные = СтруктураДанных.content;
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Событие = "clickOnFeature" Тогда
		КликПоОбъекту(Данные);
	ИначеЕсли Событие = "openMapObjectForm" Тогда
		ОткрытьФормуОбъекта(Данные);
	ИначеЕсли Событие = "editorSave" Тогда
		РедакторСохранениеОбъектов(Данные);
	ИначеЕсли Событие = "editorExit" Тогда
		РедакторВыход(Данные);
	ИначеЕсли Событие = "toggleControlPanel" Тогда
		ФормаСкрытьПанельУправления(Команды.ФормаСкрытьПанельУправления);
	ИначеЕсли Событие = "openMapObjectThematicDetails" Тогда
		ТематикаДетализация(Данные);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КликПоОбъекту(ДанныеОбъекта)
	ОбъектКарты = НайтиПоКоду(ДанныеОбъекта.id, ДанныеОбъекта.layer);
	Если ЗначениеЗаполнено(ОбъектКарты) Тогда
		ПриЛевомКликеНаКартеСпозиционироваться(ОбъектКарты);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЛевомКликеНаКартеСпозиционироваться(ОбъектКарты, ДополнительныеПараметры = Неопределено) Экспорт
	Если ОбъектКарты <> Неопределено Тогда
		Если ТипЗнч(ОбъектКарты) = Тип("СправочникСсылка.гисОбъектыКарты") Тогда
			Если Элементы.ОбъектыКартыПозиционирование.Пометка Тогда
				НеПозиционироватьсяОбъектыКарты = Истина;
				Элементы.ОбъектыКарты.ТекущаяСтрока = ОбъектКарты;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ОбъектКарты) = Тип("СправочникСсылка.гисКадастровыеЗемельныеУчастки") Тогда
			Если Элементы.КадастровыеЗемельныеУчасткиПозиционирование.Пометка Тогда
				НеПозиционироватьсяКадастровыеЗемельныеУчастки = Истина;
				Элементы.КадастровыеЗемельныеУчастки.ТекущаяСтрока = ОбъектКарты;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуОбъекта(Данные)
	ОбъектКартыСсылка = НайтиПоКоду(Данные.code, Данные.layerName);
	Если ЗначениеЗаполнено(ОбъектКартыСсылка) Тогда
		ПоказатьЗначение(, ОбъектКартыСсылка);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТематикаДетализация(Данные)
	ПараметрыДетализации = ТематикаДетализацияНаСервере(Данные);
	Если ЗначениеЗаполнено(ПараметрыДетализации.ОбъектКарты) И ЗначениеЗаполнено(ПараметрыДетализации.Показатель) Тогда
		ОткрытьФорму("Справочник.гисПоказатели.Форма.ФормаДетализации", ПараметрыДетализации);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТематикаДетализацияНаСервере(Данные)
	ПараметрыДетализации = Новый Структура("ОбъектКарты,Показатель,Дата,Значение");
	
	ПараметрыДетализации.ОбъектКарты = НайтиПоКоду(Данные.id, Данные.layer);
	
	МассивДат = Новый Массив;
	МассивДат.Добавить("date");
	ПараметрыТематики = гисРаботаСJson.ПрочитатьНативно(Данные.thematics, МассивДат);
	ПараметрыДетализации.Показатель = Справочники.гисПоказатели.НайтиПоКоду(ПараметрыТематики.identifier);
	ПараметрыДетализации.Дата = ПараметрыТематики.date;
	ПараметрыДетализации.Значение = ЗначениеИзСтрокиВнутр(ПараметрыТематики.value);
	
	Возврат ПараметрыДетализации;
КонецФункции

#Область СлужебныеПроцедурыИФункцииРедактор

&НаСервере
Функция РедакторНайтиОбъектКартыПоКоду(КодОбъекта)
	ОбъектКарты = Справочники.гисОбъектыКарты.НайтиПоКоду(КодОбъекта);
	Возврат ОбъектКарты;
КонецФункции

&НаКлиенте
Процедура РедакторСохранениеОбъектов(Данные, СохранениеПередВыходом = Неопределено)
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СохранениеПередВыходом) Тогда
		СохранениеПередВыходом = Ложь;
	КонецЕсли;
	
	Если Данные.Свойство("editing") И ( Данные.editing = 0 ИЛИ Данные.features = 0 ) Тогда
		Возврат;
	КонецЕсли;
	
	Если Данные.mode = "feature" Тогда
		
		ОбъектыИзмененные = Данные.add.Количество() + Данные.mod.Количество();
		ОбъектыУдаленные = Данные.del.Количество();
		Если 1 < Данные.count И ( 1 < ОбъектыИзмененные ИЛИ 1 < ( Данные.count - ОбъектыУдаленные ) ) Тогда
			Если 0 < Данные.add.Количество() Тогда
				ПоследняяГеометрия = Данные.add[ Данные.add.Количество()-1 ];
			ИначеЕсли 0 < Данные.mod.Количество() Тогда
				ПоследняяГеометрия = Данные.mod[ Данные.mod.Количество()-1 ];
			Иначе
				ПоследняяГеометрия = Неопределено;
			КонецЕсли;
			ПараметрыСохранения = Новый Структура("Код,Геометрия,ОчиститьСтаруюГеометрию,ЗакрытьРедактор", Данные.id, ПоследняяГеометрия, Истина, СохранениеПередВыходом);
			ОписаниеОповещения = Новый ОписаниеОповещения("РедакторСохранениеОбъектаЗавершение", ЭтотОбъект, ПараметрыСохранения);
			ПоказатьВопрос(ОписаниеОповещения, "Можно назначить только одну геометрию для объекта! Очистить ранее введенную геометрию?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Редактор геометрии");
			Возврат;
		КонецЕсли;
		
		Если 0 < ОбъектыУдаленные И Данные.features = ОбъектыУдаленные Тогда
			ПараметрыСохранения = Новый Структура("Код,Геометрия", Данные.id, Неопределено);
			Если СохранениеПередВыходом Тогда
				РедакторСохранениеОбъектовЗавершение(КодВозвратаДиалога.Да, ПараметрыСохранения);
				гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
			Иначе
				ОписаниеОповещения = Новый ОписаниеОповещения("РедакторСохранениеОбъектовЗавершение", ЭтотОбъект, ПараметрыСохранения);
				ПоказатьВопрос(ОписаниеОповещения, "Очистить геметрию?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Редактор геометрии");
			Конецесли;
		Иначе
			Если ЗначениеЗаполнено(Данные.del) И 0 < Данные.del.Количество() Тогда
				ПараметрыСохранения = Новый Структура("Код,Геометрия", Данные.id, Данные.del[0]);
				РедакторСохранениеОбъектовЗавершение(КодВозвратаДиалога.Да, ПараметрыСохранения);
			КонецЕсли;
			Геометрия = ?( 0 < Данные.mod.Количество(), Данные.mod[0], Данные.add[0] );
			ПараметрыСохранения = Новый Структура("Код,Геометрия", Данные.id, Геометрия);
			Если СохранениеПередВыходом Тогда
				РедакторСохранениеОбъектовЗавершение(КодВозвратаДиалога.Да, ПараметрыСохранения);
				гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
			Иначе
				ОписаниеОповещения = Новый ОписаниеОповещения("РедакторСохранениеОбъектовЗавершение", ЭтотОбъект, ПараметрыСохранения);
				ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения геометрии?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Редактор геометрии");
			КонецЕсли
		КонецЕсли;
		
	ИначеЕсли Данные.mode = "layer" Тогда
		
		ДополнительныеПараметры = Новый Структура("Данные,СохранениеПередВыходом", Данные, СохранениеПередВыходом);
		Если СохранениеПередВыходом Тогда
			РедакторСохранениеСлояЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		Иначе
			ИзмененияСлоя = "";
			add = ?( ТипЗнч(Данные.add) = Тип("Число"), Данные.add, Данные.add.Количество() );
			del = ?( ТипЗнч(Данные.del) = Тип("Число"), Данные.del, Данные.del.Количество() );
			mod = ?( ТипЗнч(Данные.mod) = Тип("Число"), Данные.mod, Данные.mod.Количество() );
			Если 0 < add Тогда
				ИзмененияСлоя = "добавлено " + add;
			КонецЕсли;
			Если 0 < mod Тогда
				ИзмененияСлоя = ?(0 < СтрДлина(ИзмененияСлоя), ИзмененияСлоя + ", ", "") + "изменено " + mod;
			КонецЕсли;
			Если 0 < del Тогда
				ИзмененияСлоя = ?(0 < СтрДлина(ИзмененияСлоя), ИзмененияСлоя + ", ", "") + "удалено " + del;
			КонецЕсли;
			Если 0 < СтрДлина(ИзмененияСлоя) Тогда
				ИзмененияСлоя = "(" + ИзмененияСлоя + ") ";
			КонецЕсли;
			ОписаниеОповещения = Новый ОписаниеОповещения("РедакторСохранениеСлояЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения "+ИзмененияСлоя+"объектов слоя?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Редактор геометрии");
		КонецЕсли;
		
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура РедакторСохранениеОбъектовЗавершение(РезультатВопроса, Данные) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохраненныеДанные = Новый Массив;
		Если Данные.Свойство("Геометрия") И ЗначениеЗаполнено(Данные.Геометрия) И Данные.Геометрия.Свойство("properties") Тогда
			Если Данные.Код = Данные.Геометрия.properties._id_ Тогда
				СохраненныеДанные.Добавить( Данные.Код );
			Иначе
				СохраненныеДанные.Добавить( Новый Структура( "id,cod", Данные.Геометрия.properties._id_, Данные.Код ) );
			КонецЕсли;
		Иначе
			СохраненныеДанные.Добавить( Данные.Код );
		КонецЕсли;
		РезультатСохранения = гисРаботаСКартойСервер.РедакторНазначитьГеометриюОбъектуКарты(Данные.Код, Данные.Геометрия);
		Если РезультатСохранения = Истина Тогда
			Если НЕ (Данные.Свойство("ЗакрытьРедактор") И ЗначениеЗаполнено(Данные.ЗакрытьРедактор) И Данные.ЗакрытьРедактор) Тогда
				гисРаботаСКартойКлиент.ОбъектыКартыУстановитьОтметки(ЭтотОбъект, СохраненныеДанные);
			КонецЕсли;
			Элементы.ОбъектыКарты.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедакторСохранениеОбъектаЗавершение(РезультатВопроса, Данные) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РедакторСохранениеОбъектовЗавершение( РезультатВопроса, Данные );
		
		Если Данные.Свойство("ЗакрытьРедактор") И ЗначениеЗаполнено(Данные.ЗакрытьРедактор) И Данные.ЗакрытьРедактор Тогда
			гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
		ИначеЕсли Данные.Свойство("ОчиститьСтаруюГеометрию") И ЗначениеЗаполнено(Данные.ОчиститьСтаруюГеометрию) И Данные.ОчиститьСтаруюГеометрию Тогда
			ОбъектКарты = РедакторНайтиОбъектКартыПоКоду( Данные.Код );
			гисРаботаСКартойКлиент.ОбъектыКартыВключитьРедактированиеЗавершение( РезультатВопроса, Новый Структура( "Форма,ОбъектКарты", ЭтотОбъект, ОбъектКарты ) );
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедакторСохранениеСлояЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да И ЗначениеЗаполнено(ДополнительныеПараметры) И ДополнительныеПараметры.Свойство("Данные") Тогда
		Данные = ДополнительныеПараметры.Данные;
		СохранениеПередВыходом = ?(ДополнительныеПараметры.Свойство("СохранениеПередВыходом"), ДополнительныеПараметры.СохранениеПередВыходом, Ложь);
		
		Если Данные.Свойство("kml") Тогда
			гисРаботаСКартойСервер.РедакторНазначитьKmlКарты( Данные.layer, Данные.kml);
			гисРаботаСКартойКлиент.ОбъектыКартыУстановитьОтметки(ЭтотОбъект, , Истина);
			Если СохранениеПередВыходом Тогда
				гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
			КонецЕсли;
		Иначе
			ГеометрияУдаленная = Новый Массив();
			Для Каждого УдаленнаяГеометрия Из Данные.del Цикл
				ГеометрияУдаленная.Добавить(УдаленнаяГеометрия.properties._id_);
				гисРаботаСКартойСервер.РедакторПометитьОбъектКартыНаУдаление(УдаленнаяГеометрия.properties._id_);
			КонецЦикла;
			Если 0 <Данные.mod.Количество() ИЛИ 0 < ГеометрияУдаленная.Количество() Тогда
				НесохраненныеДанные = гисРаботаСКартойСервер.РедакторНазначитьГеометриюОбъектамСлояКарты(Данные.layer, Данные.mod, ГеометрияУдаленная);
				Если ЗначениеЗаполнено(НесохраненныеДанные) Тогда
					гисРаботаСКартойКлиент.ОбъектыКартыУстановитьОтметки(ЭтотОбъект, Данные.mod, , НесохраненныеДанные.Измененная);
					гисРаботаСКартойКлиент.ОбъектыКартыУстановитьОтметки(ЭтотОбъект, ГеометрияУдаленная, , НесохраненныеДанные.Удаленная);
					Элементы.ОбъектыКарты.Обновить();
				КонецЕсли;
			КонецЕсли;
			
			ГеометрияДобавленная = Новый Массив();
			Если Данные.Свойство("add", ГеометрияДобавленная) И 0 < ГеометрияДобавленная.Количество() Тогда
				ПараметрыФормы = Новый Структура("ЗакрыватьПриЗакрытииВладельца,КодСлоя,ГеометрияДобавленная", Истина, Данные.layer, ГеометрияДобавленная);
				ОписаниеОповещения = Новый ОписаниеОповещения("РедакторСохранениеОбъектовКартыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
				ОткрытьФорму("Обработка.гисКарта.Форма.ФормаСозданияОбъектовКарты", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			ИначеЕсли СохранениеПередВыходом Тогда
				гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
				Элементы.ОбъектыКарты.Обновить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедакторВыход(Данные)
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;
	
	Если Данные.Свойство("editing") И Данные.editing <> 0 И Данные.features <> 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("РедакторВыходЗавершение", ЭтотОбъект, Данные);
		ИзмененияСлоя = "";
		Если Данные.mode = "layer" Тогда
			add = ?( ТипЗнч(Данные.add) = Тип("Число"), Данные.add, Данные.add.Количество() );
			del = ?( ТипЗнч(Данные.del) = Тип("Число"), Данные.del, Данные.del.Количество() );
			mod = ?( ТипЗнч(Данные.mod) = Тип("Число"), Данные.mod, Данные.mod.Количество() );
			Если 0 < add Тогда
				ИзмененияСлоя = "добавлено " + add;
			КонецЕсли;
			Если 0 < mod Тогда
				ИзмененияСлоя = ?(0 < СтрДлина(ИзмененияСлоя), ИзмененияСлоя + ", ", "") + "изменено " + mod;
			КонецЕсли;
			Если 0 < del Тогда
				ИзмененияСлоя = ?(0 < СтрДлина(ИзмененияСлоя), ИзмененияСлоя + ", ", "") + "удалено " + del;
			КонецЕсли;
			Если 0 < СтрДлина(ИзмененияСлоя) Тогда
				ИзмененияСлоя = "(" + ИзмененияСлоя + ") ";
			КонецЕсли;
		КонецЕсли;
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения "+ИзмененияСлоя+"перед выходом из редактора?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена, "Редактор геометрии");
	ИначеЕсли Данные.Свойство("count") И Данные.count < 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("РедакторВыходЗавершениеВыключение", ЭтотОбъект);
		ПоказатьПредупреждение(ОписаниеОповещения, Данные.message, 15, "Редактор геометрии");
	Иначе
		гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура РедакторВыходЗавершение(РезультатВопроса, Данные = Неопределено) Экспорт
	Если НЕ РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Если РезультатВопроса = КодВозвратаДиалога.Да И ЗначениеЗаполнено(Данные) Тогда
			РедакторСохранениеОбъектов(Данные, Истина);
		ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
			РедакторВыходЗавершениеВыключение(Данные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедакторВыходЗавершениеВыключение(Данные) Экспорт
	гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РедакторСохранениеОбъектовКартыЗавершение(РезультатЗакрытия, Данные) Экспорт
	Если Данные.СохранениеПередВыходом Тогда
		Если НЕ РезультатЗакрытия Тогда
			гисРаботаСКартойКлиент.ОбъектыКартыВыключитьРедактор(ЭтотОбъект);
		КонецЕсли;
		Элементы.ОбъектыКарты.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбщиеБезКонтекста

&НаСервереБезКонтекста
Функция ЭтоТочка(ОбъектКарты)
	Возврат ОбъектКарты.Слой.ТипГеометрии = Перечисления.гисТипыГеометрии.Точка;
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоКонтур(ОбъектКарты)
	Возврат ОбъектКарты.Слой.ТипГеометрии = Перечисления.гисТипыГеометрии.Линия Или ОбъектКарты.Слой.ТипГеометрии = Перечисления.гисТипыГеометрии.Полигон;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиПоКоду(Код, КодСлоя)
	ОбъектКарты = Неопределено;
	
	СлойКарты = Справочники.гисСлоиКарты.НайтиПоКоду(КодСлоя);
	Если ЗначениеЗаполнено(СлойКарты) Тогда
		Если СлойКарты.ТипСлоя = Перечисления.гисТипыСлоев.ПоСправочникуОбъектыКарты Тогда
			ИмяОбъектаМетаданных = "гисОбъектыКарты";
		ИначеЕсли СлойКарты.ТипСлоя = Перечисления.гисТипыСлоев.ПоСправочникуКадастровыеЗемельныеУчастки Тогда
			ИмяОбъектаМетаданных = "гисКадастровыеЗемельныеУчастки";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИмяОбъектаМетаданных) Тогда
			ОбъектКарты = Справочники[ИмяОбъектаМетаданных].НайтиПоКоду(Код);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОбъектКарты;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРодителя(Объект)
	Возврат Объект.Родитель;
КонецФункции

&НаСервереБезКонтекста
Функция СлоиПоТаблицеОбъектыКарты(Слой)
	Возврат Слой.ТипСлоя = Перечисления.гисТипыСлоев.ПоСправочникуОбъектыКарты;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбъектыКарты

&НаСервереБезКонтекста
Функция ОбъектыКартыПолучитьПодчиненныеОбъекты(ТекущийОбъект)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	гисОбъектыКарты.Ссылка
	|ИЗ
	|	Справочник.гисОбъектыКарты КАК гисОбъектыКарты
	|ГДЕ
	|	гисОбъектыКарты.Ссылка В ИЕРАРХИИ(&ТекущийОбъект)
	|	И НЕ гисОбъектыКарты.НеГеоОбъект");
	Запрос.УстановитьПараметр("ТекущийОбъект", ТекущийОбъект);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииКадастр

&НаСервереБезКонтекста
Функция КадастровыеЗемельныеУчасткиПолучитьПодчиненныеОбъекты(ТекущийОбъект)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	гисКадастровыеЗемельныеУчастки.Ссылка
	|ИЗ
	|	Справочник.гисКадастровыеЗемельныеУчастки КАК гисКадастровыеЗемельныеУчастки
	|ГДЕ
	|	гисКадастровыеЗемельныеУчастки.Ссылка В ИЕРАРХИИ(&ТекущийОбъект)
	|	И НЕ гисКадастровыеЗемельныеУчастки.ЭтоГруппа");
	Запрос.УстановитьПараметр("ТекущийОбъект", ТекущийОбъект);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

&НаСервереБезКонтекста
Функция КадастровыеЗемельныеУчасткиПолучитьВсеОбъектыДокумента(Объект)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	гисКадастровыеДокументыКадастровыеЗемельныеУчастки.ЗемельныйУчасток
	|ИЗ
	|	Документ.гисКадастровыеДокументы.КадастровыеЗемельныеУчастки КАК гисКадастровыеДокументыКадастровыеЗемельныеУчастки
	|ГДЕ
	|	гисКадастровыеДокументыКадастровыеЗемельныеУчастки.Ссылка = &Документ
	|	И гисКадастровыеДокументыКадастровыеЗемельныеУчастки.ЗемельныйУчасток.ГеометрияWgs ПОДОБНО &ЗаполненнаяГеометрия");
	Запрос.УстановитьПараметр("Документ", Объект.КадастровыйДокумент);
	Запрос.УстановитьПараметр("ЗаполненнаяГеометрия", "{%}");
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗемельныйУчасток");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСлоиКарты

&НаСервере
Функция СлоиКартыПолучитьДеревоСлоев()
	Возврат ЗначениеВСтрокуВнутр(РеквизитФормыВЗначение("СлоиКарты"));
КонецФункции

&НаСервере
Процедура СлоиКартыДобавитьЭлементДерева(ДеревоЭлементов, СтрокаСлоиКарты, Родитель, СтарыйЭлементДерева)
	Если Родитель.Пустая() Тогда
		// получение картинки слоя карты
		КартинкаСлоя = Новый Картинка;
		Если СтрокаСлоиКарты.ЭтоГруппа Тогда
			КартинкаСлоя = БиблиотекаКартинок.гисСлойГруппа;
		Иначе
			Если СтрокаСлоиКарты.ТипСлоя = Перечисления.гисТипыСлоев.WMS Тогда
				КартинкаСлоя = БиблиотекаКартинок.гисТипСлояWms;
			ИначеЕсли СтрокаСлоиКарты.ТипСлоя = Перечисления.гисТипыСлоев.ИзФайла Тогда
				КартинкаСлоя = БиблиотекаКартинок.гисТипСлояФайл;
			ИначеЕсли СтрокаСлоиКарты.ТипСлоя = Перечисления.гисТипыСлоев.Росреестр Тогда
				КартинкаСлоя = БиблиотекаКартинок.гисТипСлояРосреестр;
			ИначеЕсли СтрокаСлоиКарты.ТипСлоя = Перечисления.гисТипыСлоев.ПоСправочникуКадастровыеЗемельныеУчастки Тогда
				КартинкаСлоя = БиблиотекаКартинок.гисТипСлояПолигон;
			ИначеЕсли СтрокаСлоиКарты.ТипСлоя = Перечисления.гисТипыСлоев.ПоСправочникуОбъектыКарты Тогда
				Если СтрокаСлоиКарты.ТипГеометрии = Перечисления.гисТипыГеометрии.Точка Тогда
					Если Не ПустаяСтрока(СтрокаСлоиКарты.Содержимое) Тогда
						ДвоичныеДанные = Base64Значение(СтрокаСлоиКарты.Содержимое);
						КартинкаСлоя = Новый Картинка(ДвоичныеДанные);
					КонецЕсли;
				ИначеЕсли СтрокаСлоиКарты.ТипГеометрии = Перечисления.гисТипыГеометрии.Линия Тогда
					КартинкаСлоя = БиблиотекаКартинок.гисТипСлояЛиния;
				ИначеЕсли СтрокаСлоиКарты.ТипГеометрии = Перечисления.гисТипыГеометрии.Полигон Тогда
					КартинкаСлоя = БиблиотекаКартинок.гисТипСлояПолигон;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаДерева = ДеревоЭлементов.Строки.Добавить();
		СтрокаДерева.Пометка			= Ложь;
		СтрокаДерева.ПометкаПредыдущая	= Ложь;
		СтрокаДерева.Непрозрачность		= 100;
		СтрокаДерева.Ссылка				= СтрокаСлоиКарты.Ссылка;
		СтрокаДерева.ТипСлоя			= СтрокаСлоиКарты.ТипСлоя;
		СтрокаДерева.ЭтоГруппа			= СтрокаСлоиКарты.ЭтоГруппа;
		СтрокаДерева.Картинка			= КартинкаСлоя;
		
		// копирование предыдущих настроек слоя карты
		Если СтарыйЭлементДерева <> Неопределено Тогда
			СтрокаДерева.Пометка 			= СтарыйЭлементДерева.Пометка;
			СтрокаДерева.ПометкаПредыдущая	= СтарыйЭлементДерева.ПометкаПредыдущая;
			СтрокаДерева.Непрозрачность		= СтарыйЭлементДерева.Непрозрачность;
			СтрокаДерева.КартинкаТематика	= СтарыйЭлементДерева.КартинкаТематика;
		КонецЕсли;
	Иначе
		СтрокаГруппы = ДеревоЭлементов.Строки.Найти(СтрокаСлоиКарты.Родитель, "Ссылка", Истина);
		Если СтрокаГруппы = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось определить родителя для слоя %1.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаСлоиКарты.Ссылка);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения)
		Иначе
			СлоиКартыДобавитьЭлементДерева(СтрокаГруппы, СтрокаСлоиКарты, Справочники.гисСлоиКарты.ПустаяСсылка(), СтарыйЭлементДерева);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СлоиКартыЗаполнить()
	ДеревоЗначений = ЭтотОбъект.РеквизитФормыВЗначение("СлоиКарты");
	СтароеДерево = ДеревоЗначений.Скопировать();
	ДеревоЗначений.Строки.Очистить();
	
	// слои
	ЗапросСлоев = Новый Запрос;
	ЗапросСлоев.Текст =
	"ВЫБРАТЬ
	|	Картинки.Ссылка КАК Ссылка,
	|	Картинки.Содержимое КАК Содержимое
	|ПОМЕСТИТЬ
	|	ВТКартинки
	|ИЗ
	|	Справочник.гисКартинкиТочечныхОбъектов КАК Картинки
	|
	|;	
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СлоиКарты.Ссылка КАК Ссылка,
	|	СлоиКарты.Наименование КАК Наименование,
	|	СлоиКарты.Родитель КАК Родитель,
	|	СлоиКарты.ТипГеометрии КАК ТипГеометрии,
	|	СлоиКарты.ТипСлоя КАК ТипСлоя,
	|	СлоиКарты.ЭтоГруппа КАК ЭтоГруппа,
	|	Картинки.Содержимое КАК Содержимое
	|ИЗ
	|	Справочник.гисСлоиКарты КАК СлоиКарты
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТКартинки КАК Картинки
	|		ПО СлоиКарты.Картинка = Картинки.Ссылка
	|ГДЕ
	|	НЕ СлоиКарты.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СлоиКарты.Наименование ИЕРАРХИЯ";
	ТаблицаСлоиКарты = ЗапросСлоев.Выполнить().Выгрузить();
	
	Для Каждого СтрокаСлоиКарты Из ТаблицаСлоиКарты Цикл
		ЗначениеПометки = 0;
		Непрозрачность	= 100;
		
		ЭлементДерева = СтароеДерево.Строки.Найти(СтрокаСлоиКарты.Ссылка, "Ссылка", Истина);
		Если ЭлементДерева <> Неопределено Тогда
			ЗначениеПометки	= ЭлементДерева.Пометка;
			Непрозрачность	= ЭлементДерева.Непрозрачность;
		КонецЕсли;
		
		СлоиКартыДобавитьЭлементДерева(ДеревоЗначений, СтрокаСлоиКарты, СтрокаСлоиКарты.Родитель, ЭлементДерева);
	КонецЦикла;
	
	ЭтотОбъект.ЗначениеВРеквизитФормы(ДеревоЗначений, "СлоиКарты");
КонецПроцедуры

&НаКлиенте
Функция СлоиКартыОбойтиДерево(КоллекцияЭлементов, Знач Слой)
	Идентификатор = Неопределено;
	
	Для каждого ЭлементКоллекции Из КоллекцияЭлементов Цикл
		Если ЭлементКоллекции.Ссылка = Слой Тогда
			Возврат ЭлементКоллекции.ПолучитьИдентификатор();
		КонецЕсли;
		
		Идентификатор = СлоиКартыОбойтиДерево(ЭлементКоллекции.ПолучитьЭлементы(), Слой);
		Если Идентификатор <> Неопределено Тогда
			Возврат Идентификатор;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Идентификатор;
КонецФункции

&НаКлиенте
Функция СлоиКартыНайтиСтрокуДерева(Знач Слой)
	КоллекцияЭлементов = СлоиКарты.ПолучитьЭлементы();
	
	Идентификатор = СлоиКартыОбойтиДерево(КоллекцияЭлементов, Слой);
	
	Возврат Идентификатор;
КонецФункции

&НаКлиенте
Функция СлоиКартыУстановитьЗначениеПометкиРекурсивно(КоллекцияЭлементов, ЗначениеПометки)
	МассивСлоев = Новый Массив;
	
	Для Каждого ЭлементДерева Из КоллекцияЭлементов Цикл
		Если ЭлементДерева.ЭтоГруппа Тогда
			Массив = СлоиКартыУстановитьЗначениеПометкиРекурсивно(ЭлементДерева.ПолучитьЭлементы(), ЗначениеПометки);
			Для Каждого СлойМассива Из Массив Цикл
				МассивСлоев.Добавить(СлойМассива);
			КонецЦикла;
			ЭлементДерева.Пометка = ЗначениеПометки;
			ЭлементДерева.ПометкаПредыдущая = ЗначениеПометки;
		Иначе
			Если ЭлементДерева.Пометка <> ЗначениеПометки Тогда
				МассивСлоев.Добавить(ЭлементДерева.Ссылка);
			КонецЕсли;
			ЭлементДерева.Пометка = ЗначениеПометки;
			ЭлементДерева.ПометкаПредыдущая = ЗначениеПометки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивСлоев;
КонецФункции

&НаКлиенте
Процедура СлоиКартыОбновитьЗначениеПометкиПоГруппамВверхРекурсивно(ЭлементКоллекции)
	Если ЭлементКоллекции = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Количество0 = 0;
	Количество1 = 0;
	КоличествоВсего = 0;
	Для Каждого ЭлементДерева Из ЭлементКоллекции.ПолучитьЭлементы() Цикл
		Если ЭлементДерева.Пометка = 0 Тогда
			Количество0 = Количество0 + 1;
		ИначеЕсли ЭлементДерева.Пометка = 1 Тогда
			Количество1 = Количество1 + 1;
		КонецЕсли;
		КоличествоВсего = КоличествоВсего + 1;
	КонецЦикла;
	
	Если КоличествоВсего = Количество0 Тогда
		Пометка = 0;
	ИначеЕсли КоличествоВсего = Количество1 Тогда
		Пометка = 1;
	Иначе
		Пометка = 2;
	КонецЕсли;
	
	Если Пометка <> ЭлементКоллекции.Пометка Тогда
		ЭлементКоллекции.Пометка = Пометка;
		ЭлементКоллекции.ПометкаПредыдущая = Пометка;
		СлоиКартыОбновитьЗначениеПометкиПоГруппамВверхРекурсивно(ЭлементКоллекции.ПолучитьРодителя());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция СлоиКартыОбновитьЗначениеПометкиПоГруппамВнизРекурсивно(Коллекция)
	Количество0 = 0;
	Количество1 = 0;
	КоличествоВсего = 0;
	Для Каждого ЭлементДерева Из Коллекция Цикл
		Если ЭлементДерева.ЭтоГруппа Тогда
			Пометка = СлоиКартыОбновитьЗначениеПометкиПоГруппамВнизРекурсивно(ЭлементДерева.ПолучитьЭлементы());
			ЭлементДерева.Пометка = Пометка;
			ЭлементДерева.ПометкаПредыдущая = Пометка;
		КонецЕсли;
		
		Если ЭлементДерева.Пометка = 0 Тогда
			Количество0 = Количество0 + 1;
		ИначеЕсли ЭлементДерева.Пометка = 1 Тогда
			Количество1 = Количество1 + 1;
		КонецЕсли;
		КоличествоВсего = КоличествоВсего + 1;
	КонецЦикла;
	
	Если КоличествоВсего = Количество0 Тогда
		Пометка = 0;
	ИначеЕсли КоличествоВсего = Количество1 Тогда
		Пометка = 1;
	Иначе
		Пометка = 2;
	КонецЕсли;
	
	Возврат Пометка;
КонецФункции


&НаКлиенте
Процедура СлоиКартыОбновитьПометки(МассивСлоев, МассивДляУстановкиНепрозрачности = Неопределено)
	Для Каждого СтруктураСлоя Из МассивСлоев Цикл
		ИдентификаторСтроки = СлоиКартыНайтиСтрокуДерева(СтруктураСлоя.Слой);
		Если ИдентификаторСтроки <> Неопределено Тогда
			СтрокаСлоя = СлоиКарты.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если СтруктураСлоя.КоличествоНаКарте = 0 Тогда
				НовоеЗначение = 0;
			ИначеЕсли СтруктураСлоя.КоличествоНаКарте = СтруктураСлоя.КоличествоВсего Тогда
				НовоеЗначение = 1;
			Иначе
				НовоеЗначение = 2;
			КонецЕсли;
			
			Если НовоеЗначение <> СтрокаСлоя.Пометка Тогда
				СтрокаСлоя.Пометка = НовоеЗначение;
				СтрокаСлоя.ПометкаПредыдущая = НовоеЗначение;
				СлоиКартыОбновитьЗначениеПометкиПоГруппамВверхРекурсивно(СтрокаСлоя.ПолучитьРодителя());
			КонецЕсли;
			
			гисРаботаСКартойКлиент.СлоиКартыИзменитьНепрозрачность(ЭтотОбъект, СтрокаСлоя.Ссылка, СтрокаСлоя.Непрозрачность);
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(МассивДляУстановкиНепрозрачности) = Тип("Массив") Тогда
		Для Каждого Слой Из МассивДляУстановкиНепрозрачности Цикл
			ИдентификаторСтроки = СлоиКартыНайтиСтрокуДерева(Слой);
			Если ИдентификаторСтроки <> Неопределено Тогда
				СтрокаСлоя = СлоиКарты.НайтиПоИдентификатору(ИдентификаторСтроки);
				гисРаботаСКартойКлиент.СлоиКартыИзменитьНепрозрачность(ЭтотОбъект, СтрокаСлоя.Ссылка, СтрокаСлоя.Непрозрачность);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииТематика

&НаСервереБезКонтекста
Функция ТематикаПолучитьДоступныеПоказатели(СлойКарты)
	Возврат Справочники.гисПоказатели.ПолучитьДоступныеПоказатели(СлойКарты);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииОбщиеКлиентские

&НаКлиенте
Функция ПолучитьРежимПозиционирования()
	Возврат Элементы.ОбъектыКартыПозиционирование.Пометка
		Или Элементы.КадастровыеЗемельныеУчасткиПозиционирование.Пометка;
КонецФункции

#КонецОбласти

#КонецОбласти
