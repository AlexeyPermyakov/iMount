
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	УстановитьТипыЗначенийДляВсехСтрок();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗначения

&НаКлиенте
Процедура ЗначенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		УстановитьТипЗначенияДляНовойСтроки(Элементы.Значения.ТекущиеДанные.Значение);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЗначенияОбъектКартыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Справочник.гисОбъектыКарты.ФормаВыбора", Новый Структура("ТекущаяСтрока,МножественныйВыбор", Элементы.Значения.ТекущиеДанные.ОбъектКарты, Истина), ЭтотОбъект, , , , 
		Новый ОписаниеОповещения("ЗначенияОбъектКартыНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияОбъектКартыНачалоВыбораЗавершение(МассивЗначений, ДополнительныеПараметры) Экспорт
	Если МассивЗначений <> Неопределено Тогда
		ПервоеЗначение = Истина;
		Для Каждого Значение Из МассивЗначений Цикл
			// пока не заполним текущую строку, новые строки не добавляем
			Если ПервоеЗначение Тогда
				Если Элементы.Значения.ТекущиеДанные.ОбъектКарты <> Значение И 
					УжеЕстьОбъект(Значение) Тогда
					ТекстСообщения = НСтр("ru = 'Объект %1 уже есть в таблице!'; en = 'Object %1 is already in the table!'");
					ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Значение));
					Продолжить;
				КонецЕсли;
				Элементы.Значения.ТекущиеДанные.ОбъектКарты = Значение;
				ПервоеЗначение = Ложь;
			Иначе
				Если УжеЕстьОбъект(Значение) Тогда
					ТекстСообщения = НСтр("ru = 'Объект %1 уже есть в таблице!'; en = 'Object %1 is already in the table!'");
					ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Значение));
					Продолжить;
				КонецЕсли;
				НоваяСтрока = Объект.Значения.Добавить();
				НоваяСтрока.ОбъектКарты = Значение;
				
				УстановитьТипЗначенияДляНовойСтроки(НоваяСтрока.Значение)
			КонецЕсли;
		КонецЦикла;
		ОбновитьОтображениеДанных();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЗначенияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТипЗначения = ПолучитьТипЗначения(Объект.Показатель);
	Если ТипЗначения = ПредопределенноеЗначение("Перечисление.гисПоказателиТипы.Справочник") Тогда
		ВладелецЗначений = ПолучитьВладельцаЗначений(Объект.Показатель);
		Если ЗначениеЗаполнено(ВладелецЗначений) Тогда
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ВладелецЗначений);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
		Иначе
			НовыйМассив = Новый Массив();
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьТипЗначения(Показатель)
	Возврат Показатель.ТипЗначения;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВладельцаЗначений(Показатель)
	Возврат Показатель.СправочникВладелецЗначений;
КонецФункции


&НаСервере
Процедура УстановитьТипыЗначенийДляВсехСтрок()
	ТипПоказателя = Справочники.гисПоказатели.ПолучитьТипЗначения(Объект.Показатель.ТипЗначения, Объект.Показатель.СправочникИмя);
	
	Для Каждого Строка Из Объект.Значения Цикл
		Строка.Значение = ТипПоказателя.ПривестиЗначение(Строка.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьТипЗначенияДляНовойСтроки(Значение)
	ТипПоказателя = Справочники.гисПоказатели.ПолучитьТипЗначения(Объект.Показатель.ТипЗначения, Объект.Показатель.СправочникИмя);
	Значение = ТипПоказателя.ПривестиЗначение(Значение);
КонецПроцедуры


&НаКлиенте
Функция УжеЕстьОбъект(ТекущийОбъект)
	Строки = Объект.Значения.НайтиСтроки(Новый Структура("ОбъектКарты", ТекущийОбъект));
	Возврат Строки.Количество() > 0;
КонецФункции

#КонецОбласти
