  
&НаКлиенте
Перем СоответствиеЗависимых;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВидСправочника") Тогда
		Объект.Владелец = Параметры.ВидСправочника;	
	КонецЕсли;
	
	ЭтаФорма.Заголовок = Объект.Владелец.Наименование;
	
	// лм_УниверсальныеСтруктурыДанных
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Владелец", Объект.Владелец);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаУниверсальныеСтруктуры");	
	ДополнительныеПараметры.Вставить("ИдентификаторЭлемента", Объект.Ссылка);
	лм_УниверсальныеСтруктурыДанных.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);

// Конец лм_УниверсальныеСтруктурыДанных
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// лм_УниверсальныеСтруктурыДанных
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Владелец",              Объект.Владелец);	
	ДополнительныеПараметры.Вставить("ИдентификаторЭлемента", Объект.Ссылка);	
	лм_УниверсальныеСтруктурыДанных.ПослеЗаписиНаСервере(ЭтаФорма, ДополнительныеПараметры);
// Конец лм_УниверсальныеСтруктурыДанных
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// лм_УниверсальныеСтруктурыДанных
  
  //ПодключитьОбработчикОжидания("ИнициализироватьСлужебныеПеременные", 0.5, Истина);

// Конец лм_УниверсальныеСтруктурыДанных
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)	
	
// лм_УниверсальныеСтруктурыДанных
  
  Если ИмяСобытия = "СозданиеЭлементов" Тогда
	   ДобавитьЭлементыФормы(Параметр);
  КонецЕсли;
// Конец лм_УниверсальныеСтруктурыДанных

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// лм_УниверсальныеСтруктурыДанных
		
&НаКлиенте
Процедура лм_УниверсальныеСтруктурыДанных_ПриИзмененииРеквизита(Элемент) 
	
	Если СоответствиеЗависимых = Неопределено Тогда
		ИнициализироватьСлужебныеПеременные();
	КонецЕсли;

	лм_УниверсальныеСтруктурыДанныхКлиент.ОбновитьЗависимостиРеквизитовУниверсальнойСтруктуры(ЭтаФорма, СоответствиеЗависимых);	
	
КонецПроцедуры	

&НаКлиенте
Процедура лм_УниверсальныеСтруктурыДанных_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	лм_УниверсальныеСтруктурыДанныхКлиент.НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура лм_УниверсальныеСтруктурыДанных_ПриИзмененииРеквизитаВладельца(Элемент)
	
	ПриИзмененииРеквизитаВладельца();
	
КонецПроцедуры

// Конец лм_УниверсальныеСтруктурыДанных

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// лм_УниверсальныеСтруктурыДанных
		
&НаСервере
Процедура ДобавитьЭлементыФормы(СоответствиеДобавляемых)
	
	лм_УниверсальныеСтруктурыДанных.СформироватьЭлементыФормыПоУниверсальнойСтруктуре(ЭтаФорма,, ЭтаФорма[лм_УниверсальныеСтруктурыДанныхКлиентСервер.ИмяРеквизитаЭлементРазмещения()],,СоответствиеДобавляемых);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииРеквизитаВладельца()
	
	лм_УниверсальныеСтруктурыДанных.ПриИзмененииРеквизитаВладельца(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиенте
Процедура ИнициализироватьСлужебныеПеременные()
	
	СоответствиеЗависимых  = ПолучитьИзВременногоХранилища(ЭтаФорма[лм_УниверсальныеСтруктурыДанныхКлиентСервер.ИмяРеквизитаАдресаСоответствияЗависимостей()]);
	СоответствиеРеквизитов = ПолучитьИзВременногоХранилища(ЭтаФорма[лм_УниверсальныеСтруктурыДанныхКлиентСервер.ИмяРеквизитаСоответствияРеквизитов()]);
  
КонецПроцедуры

// Конец лм_УниверсальныеСтруктурыДанных

#КонецОбласти