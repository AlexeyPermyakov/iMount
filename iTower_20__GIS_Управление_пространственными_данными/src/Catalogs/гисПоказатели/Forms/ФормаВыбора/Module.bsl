#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.СлойКарты) Тогда
		ОбновитьСписок();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не Группа И ЗначениеЗаполнено(Параметры.СлойКарты) Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура("СлойКарты", Параметры.СлойКарты);
		Если Копирование Тогда
			ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Список.ТекущиеДанные.Ссылка);
		КонецЕсли;
		ОткрытьФорму("Справочник.гисПоказатели.ФормаОбъекта", ПараметрыФормы,, , , , Новый ОписаниеОповещения("СписокРедактированиеЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Если Не Элементы.Список.ТекущиеДанные.ЭтоГруппа И ЗначениеЗаполнено(Параметры.СлойКарты) Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура("СлойКарты,Ключ", Параметры.СлойКарты, Элементы.Список.ТекущиеДанные.Ссылка);
		ОткрытьФорму("Справочник.гисПоказатели.ФормаОбъекта", ПараметрыФормы,, , , , Новый ОписаниеОповещения("СписокРедактированиеЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокРедактированиеЗавершение(ВозвращаемоеЗначение, ДополнительныеПараметры) Экспорт
	ОбновитьСписок();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписок()
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка", Справочники.гисПоказатели.ПолучитьДоступныеПоказатели(Параметры.СлойКарты));
КонецПроцедуры

#КонецОбласти
