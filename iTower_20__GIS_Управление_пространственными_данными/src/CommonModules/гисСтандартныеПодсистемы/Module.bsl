////////////////////////////////////////////////////////////////////////////////
// Модуль для работы с доступами БСП.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вызывается при установке параметров сеанса.
//
// Параметры:
//  ИменаПараметровСеанса - Массив, Неопределено.
//
Процедура УстановкаПараметровСеанса(ИменаПараметровСеанса) Экспорт
	
	Если ИменаПараметровСеанса = Неопределено Тогда
		// При установке соединения с информационной базой до вызова всех остальных обработчиков.

		// Привилегированный режим (установлен платформой).
		
		// Проверка свойства конфигурации "Основной стиль" и главного стиля конфигурации.
		// В случае установленного свойства либо главного стиля - отключение функционала.
		Если Метаданные.ОсновнойСтиль = Неопределено И ГлавныйСтиль = Новый Стиль Тогда
			ИмяСтиляКонфигурации = Константы.гисИмяСтиляКонфигурации.Получить();
			Если ЗначениеЗаполнено(ИмяСтиляКонфигурации) Тогда
				Попытка
					ГлавныйСтиль = БиблиотекаСтилей[ИмяСтиляКонфигурации];
				Исключение
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не удалось установить стиль конфигурации ""%1"" по причине:
									|%2'"),
						ИмяСтиляКонфигурации,
						ОписаниеОшибки());
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'GIS. Установка стиля конфигурации'"),
						УровеньЖурналаРегистрации.Ошибка,
						,
						,
						ТекстОшибки);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет виды доступа, используемые в ограничениях прав доступа.
// Виды доступа Пользователи и ВнешниеПользователи уже заполнены.
// Их можно удалить, если они не требуются для ограничения прав доступа.
//
// Параметры:
//  ВидыДоступа - ТаблицаЗначений - с колонками:
//   * Имя                    - Строка - имя используемое в описании поставляемых
//                                       профилей групп доступа и текстах ОДД.
//   * Представление          - Строка - представляет вид доступа в профилях и группах доступа.
//   * ТипЗначений            - Тип    - тип ссылки значений доступа.
//                                       Например, Тип("СправочникСсылка.Номенклатура").
//   * ТипГруппЗначений       - Тип    - тип ссылки групп значений доступа.
//                                       Например, Тип("СправочникСсылка.ГруппыДоступаНоменклатуры").
//   * НесколькоГруппЗначений - Булево - Истина указывает, что для значения доступа (Номенклатуры), можно
//                                       выбрать несколько групп значений (Групп доступа номенклатуры).
//
Процедура ПриЗаполненииВидовДоступа(ВидыДоступа) Экспорт
	
    ВидДоступа = ВидыДоступа.Добавить();
    ВидДоступа.Имя = "гисСлоиКарты";
    ВидДоступа.Представление = НСтр("ru = 'Слои карты'");
    ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.гисСлоиКарты");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "гисОбъектыКарты";
	ВидДоступа.Представление = НСтр("ru = 'Объекты карты'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.гисОбъектыКарты");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "гисКадастровыеЗемельныеУчастки";
	ВидДоступа.Представление = НСтр("ru = 'Кадастровые земельные участки'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.гисКадастровыеЗемельныеУчастки");
	
КонецПроцедуры

// Позволяет указать списки, у которых объекты метаданных содержат описание логики ограничения
// доступа в модулях менеджеров или переопределяемом модуле.
//
// В модулях менеджеров указанных списков должна быть размещена процедура обработчика,
// в которую передаются следующие параметры.
// 
//  Ограничение - Структура - со свойствами:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                            Если пустая строка, значит доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                            Если пустая строка, значит доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                            если Истина, тогда не записывать ключи доступа,
//                                            а использовать ключи доступа владельца (требуется,
//                                            чтобы ограничение было строго по объекту-владельцу).
///   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - см.
//                                            описание предыдущего параметра.
//
// Далее пример процедуры для модуля менеджера.
//
//// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
//Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
//	
//	Ограничение.Текст =
//	"РазрешитьЧтениеИзменение
//	|ГДЕ
//	|	ЗначениеРазрешено(Организация)
//	|	И ЗначениеРазрешено(Контрагент)";
//	
//КонецПроцедуры
//
// Параметры:
//  Списки - Соответствие - списки с ограничением доступа:
//             * Ключ     - ОбъектМетаданных - список с ограничением доступа.
//             * Значение - Булево - Истина - текст ограничения в модуле менеджера.
//                                 - Ложь   - текст ограничения в этом переопределяемом
//                модуле в процедуре ПриЗаполненииОграниченияДоступа.
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Справочники.гисСлоиКарты, Истина);
	Списки.Вставить(Метаданные.Справочники.гисОбъектыКарты, Истина);
	Списки.Вставить(Метаданные.Справочники.гисОбъектыКартыПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.гисКадастровыеЗемельныеУчастки, Истина);
	Списки.Вставить(Метаданные.Справочники.гисКадастровыеЗемельныеУчасткиПрисоединенныеФайлы, Истина);
	
КонецПроцедуры

// Заполняет состав видов доступа, используемых при ограничении прав объектов метаданных.
// Если состав видов доступа не заполнен, отчет "Права доступа" покажет некорректные сведения.
//
// Обязательно требуется заполнить только виды доступа, используемые в шаблонах ограничения доступа
// явно, а виды доступа, используемые в наборах значений доступа могут быть получены из текущего
// состояния регистра сведений НаборыЗначенийДоступа.
//
//  Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  Описание     - Строка - многострочная строка формата <Таблица>.<Право>.<ВидДоступа>[.Таблица объекта],
//                 например, "Документ.ПриходнаяНакладная.Чтение.Организации",
//                           "Документ.ПриходнаяНакладная.Чтение.Контрагенты",
//                           "Документ.ПриходнаяНакладная.Изменение.Организации",
//                           "Документ.ПриходнаяНакладная.Изменение.Контрагенты",
//                           "Документ.ЭлектронныеПисьма.Чтение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.ЭлектронныеПисьма.Изменение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.Файлы.Чтение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Чтение.Объект.Документ.ЭлектронноеПисьмо",
//                           "Документ.Файлы.Изменение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Изменение.Объект.Документ.ЭлектронноеПисьмо".
//                 Вид доступа Объект предопределен, как литерал. Этот вид доступа используется в
//                 шаблонах ограничений доступа, как "ссылка" на другой объект, по которому
//                 ограничивается текущий объект таблицы.
//                 Когда вид доступа "Объект" задан, также требуется задать типы таблиц,
//                 которые используются для этого вида доступа. Т.е. перечислить типы,
//                 которые соответствуют полю, использованному в шаблоне ограничения доступа
//                 в паре с видом доступа "Объект". При перечислении типов по виду доступа "Объект"
//                 нужно перечислить только те типы поля, которые есть
//                 у поля РегистрыСведений.НаборыЗначенийДоступа.Объект, остальные типы лишние.
// 
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание) Экспорт
	
	Описание = Описание + "
	|Справочник.гисКадастровыеЗемельныеУчастки.Чтение.гисКадастровыеЗемельныеУчастки
	|Справочник.гисКадастровыеЗемельныеУчастки.Изменение.гисКадастровыеЗемельныеУчастки
	|Справочник.гисКадастровыеЗемельныеУчастки.Чтение.гисСлоиКарты
	|Справочник.гисКадастровыеЗемельныеУчастки.Изменение.гисСлоиКарты
	|Справочник.гисКадастровыеЗемельныеУчасткиПрисоединенныеФайлы.Чтение.Объект.Справочник.гисКадастровыеЗемельныеУчастки
	|Справочник.гисКадастровыеЗемельныеУчасткиПрисоединенныеФайлы.Изменение.Объект.Справочник.гисКадастровыеЗемельныеУчастки
	|Справочник.гисОбъектыКарты.Чтение.гисОбъектыКарты
	|Справочник.гисОбъектыКарты.Изменение.гисОбъектыКарты
	|Справочник.гисОбъектыКарты.Чтение.гисСлоиКарты
	|Справочник.гисОбъектыКарты.Изменение.гисСлоиКарты
	|Справочник.гисОбъектыКартыПрисоединенныеФайлы.Чтение.Объект.Справочник.гисОбъектыКарты
	|Справочник.гисОбъектыКартыПрисоединенныеФайлы.Изменение.Объект.Справочник.гисОбъектыКарты
	|Справочник.гисСлоиКарты.Чтение.гисСлоиКарты
	|Справочник.гисСлоиКарты.Изменение.гисСлоиКарты";
	
КонецПроцедуры

#КонецОбласти
