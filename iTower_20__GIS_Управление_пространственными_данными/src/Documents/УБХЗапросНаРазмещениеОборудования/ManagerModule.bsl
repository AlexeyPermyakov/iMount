#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ДополнительныеСвойства.Вставить("РеквизитыДокумента", Новый Структура);
	
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;	
	ТекстЗапросаТаблицаОборудованиеОбъектаПБК(Запрос, ТекстыЗапроса, Регистры);
	
	УБХПроведениеСервер.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Дата                    КАК Период,
	|	ДанныеДокумента.Площадка                КАК Площадка,
	|	ДанныеДокумента.Номер                   КАК Номер,
	|	ДанныеДокумента.ТекущаяВерсияЗапроса    КАК ТекущаяВерсияЗапроса,
	|	ДанныеДокумента.Статус          		КАК Статус,
	|	ДанныеДокумента.ТипЗапроса             	КАК ТипЗапроса,
	|	ДанныеДокумента.АМС         			КАК АМС,
	|	ДанныеДокумента.КлиентПБК           	КАК КлиентПБК,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен                КАК Проведен
	|ИЗ
	|	Документ.УБХЗапросНаРазмещениеОборудования КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
		ДополнительныеСвойства.РеквизитыДокумента.Вставить(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
			
КонецПроцедуры

Функция ТекстЗапросаТаблицаОборудованиеОбъектаПБК(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УБХОборудованиеОбъектаПБК";
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&АМС КАК АМС,
	|	&Площадка КАК Площадка,
	|	&КлиентПБК КАК КлиентПБК,
	|	&Период КАК Период,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.ТипРазмещенияВКонтейнере КАК ТипРазмещенияВКонтейнере,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.ЕдиницаОборудования КАК ЕдиницаОборудования,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.Статус КАК Статус,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.ГруппаРазмещения КАК ГруппаРазмещения,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.ПлановаяВысотаПодвеса КАК ПлановаяВысотаПодвеса,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.Габариты КАК Габариты,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.Диаметр КАК Диаметр,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.Площадь КАК Площадь,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.Азимут КАК Азимут,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.ДлинаКабеля КАК ДлинаКабеля,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.КоличествоНитокКабеля КАК КоличествоНитокКабеля,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.НомерМеста КАК НомерМеста,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.КоличествоМодулей КАК КоличествоМодулей,
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.ВысотаПодвеса КАК ВысотаПодвеса
	|ИЗ
	|	Документ.УБХЗапросНаРазмещениеОборудования.ПереченьОборудования КАК ЗапросНаРазмещениеОборудованияПереченьОборудования
	|ГДЕ
	|	ЗапросНаРазмещениеОборудованияПереченьОборудования.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПечатныеФормы

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Товарная накладная (ТОРГ-12)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати 	= "Документ.УБХЗапросНаРазмещениеОборудования";
	КомандаПечати.Идентификатор 	= "КП_Размещение";
	КомандаПечати.Представление 	= НСтр("ru = 'Коммерческое предложение на размещение'");
	КомандаПечати.Обработчик    	= "УБХУправлениеПечатьюКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм   		= "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок 			= 10;
	
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати 	= "Документ.УБХЗапросНаРазмещениеОборудования";
	//КомандаПечати.Идентификатор 	= "КП_Размещение_1";
	//КомандаПечати.Представление 	= НСтр("ru = 'Коммерческое предложение на размещение 1'");
	//КомандаПечати.Обработчик    	= "УБХУправлениеПечатьюКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм   		= "ФормаСписка,ФормаДокумента";
	//КомандаПечати.Порядок 			= 20;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	 // Проверяем, нужно ли для макета СчетЗаказ формировать табличный документ.
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КП_Размещение") Тогда
        // Формируем табличный документ и добавляем его в коллекцию печатных форм.
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
            "КП_Размещение", "Коммерческое предложение на размещение", ПечатьКП_Размещение(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКП_Размещение(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_КП_На_Размещение";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УБХЗапросНаРазмещениеОборудования.АМС.Адрес КАК Адрес,
		|	УБХЗапросНаРазмещениеОборудования.АМС.Код КАК ИД,
		|	УБХЗапросНаРазмещениеОборудования.АМС.Широта КАК Широта,
		|	УБХЗапросНаРазмещениеОборудования.АМС.Долгота КАК Долгота,
		|	УБХЗапросНаРазмещениеОборудования.Сумма КАК СуммаСНДС,
		|	""Комплект технологического оборудования для размещения на Объекте "" + УБХЗапросНаРазмещениеОборудования.АМС.Код КАК Комплект,
		|	УБХЗапросНаРазмещениеОборудования.СтоимостьРазмещенияИтого КАК Сумма,
		|	-УБХЗапросНаРазмещениеОборудования.СуммаНаценки + УБХЗапросНаРазмещениеОборудования.СуммаСпецСкидки + УБХЗапросНаРазмещениеОборудования.СуммаСкидкиЗаОбщийОбъем КАК СпецСкидка,
		|	УБХЗапросНаРазмещениеОборудования.СтоимостьРазмещения КАК СуммаПоТарифу,
		|	УБХЗапросНаРазмещениеОборудования.СуммаНДС КАК СуммаНДС
		|ИЗ
		|	Документ.УБХЗапросНаРазмещениеОборудования КАК УБХЗапросНаРазмещениеОборудования
		|ГДЕ
		|	УБХЗапросНаРазмещениеОборудования.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УБХЗапросНаРазмещениеОборудования.АМС.Код КАК НомерОбъекта,
		|	УБХЗапросНаРазмещениеОборудования.ПереченьОборудования.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		ТипРазмещенияВКонтейнере КАК ТипРазмещения,
		|		ГруппаРазмещения КАК ГруппаРазмещения,
		|		ЕдиницаОборудования.Высота КАК Высота,
		|		ЕдиницаОборудования.Ширина КАК Ширина,
		|		ЕдиницаОборудования.Глубина КАК Глубина,
		|		ЕдиницаОборудования.Вес КАК Вес,
		|		ЕдиницаОборудования.Модель КАК Модель
		|	) КАК ПереченьОборудования,
		|	УБХЗапросНаРазмещениеОборудования.Ссылка КАК Ссылка,
		|	УБХЗапросНаРазмещениеОборудования.НапряжениеПитания КАК НапряжениеПитания,
		|	УБХЗапросНаРазмещениеОборудования.Мощность КАК Мощность,
		|	УБХЗапросНаРазмещениеОборудования.КатегорияЭлектроснабжения КАК КатегорияЭлектроснабжения
		|ИЗ
		|	Документ.УБХЗапросНаРазмещениеОборудования КАК УБХЗапросНаРазмещениеОборудования
		|ГДЕ
		|	УБХЗапросНаРазмещениеОборудования.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[0].Пустой() Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
		
	ВыборкаОбъекты = РезультатЗапроса[0].Выбрать();
	
	МакетПечати = ПолучитьОбщийМакет("УБХКоммерческоеПредложение");
	
	Шапка 			= МакетПечати.ПолучитьОбласть("Шапка");
	Преамбула 		= МакетПечати.ПолучитьОбласть("Преамбула");
	ШапкаОбъекты  	= МакетПечати.ПолучитьОбласть("ШапкаОбъекты");
	ДеталиОбъекты 	= МакетПечати.ПолучитьОбласть("ДеталиОбъекты");

	ТабличныйДокумент.Вывести(Шапка);
	ТабличныйДокумент.Вывести(Преамбула);
	ТабличныйДокумент.Вывести(ШапкаОбъекты);

	Номер = 1;
	Пока ВыборкаОбъекты.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДеталиОбъекты.Параметры, ВыборкаОбъекты);
		ДеталиОбъекты.Параметры.Номер = Номер;
		ТабличныйДокумент.Вывести(ДеталиОбъекты);
		Номер = Номер + 1;
	КонецЦикла;
	
	ВыборкаОбъекты.Сбросить();
	
	
	ШапкаКомплекты = МакетПечати.ПолучитьОбласть("ШапкаКомплекты");
	ТабличныйДокумент.Вывести(ШапкаКомплекты);
	
	ШапкаКомплекта 		= МакетПечати.ПолучитьОбласть("ШапкаКомплекта");
	ШапкаПодключение 	= МакетПечати.ПолучитьОбласть("ШапкаПодключение");

	ШапкаТаблАМС 		= МакетПечати.ПолучитьОбласть("ШапкаТаблАМС");
	ДеталиТаблАМС 		= МакетПечати.ПолучитьОбласть("ДеталиТаблАМС");
	ШапкаТаблКонтейнер  = МакетПечати.ПолучитьОбласть("ШапкаТаблКонтейнер");
	ДеталиТаблКонтейнер = МакетПечати.ПолучитьОбласть("ДеталиТаблКонтейнер");
	ДеталиПодключение   = МакетПечати.ПолучитьОбласть("ДеталиПодключение");
	
	ВыборкаЗапросы = РезультатЗапроса[1].Выбрать();
	НомерКомплекта = 1;
	
	Пока ВыборкаЗапросы.Следующий() Цикл
		
		ШапкаКомплекта.Параметры.НомерКомплекта = "2." + Формат(НомерКомплекта, "ЧГ=0"); 
		ШапкаКомплекта.Параметры.НомерОбъекта = ВыборкаЗапросы.НомерОбъекта;
		
		ТабличныйДокумент.Вывести(ШапкаКомплекта);
		
		// АМС.
		Группы = Новый Массив;
		Группы.Добавить(Перечисления.УБХГруппыРазмещения.АМС);
		
		ВывестиГруппуРазмещения(ВыборкаЗапросы, ".1", ТабличныйДокумент, ШапкаПодключение, 
			ШапкаТаблАМС, Группы, "Перечень оборудования для размещения на АМС",
				": без размещения на АМС", НомерКомплекта, ДеталиТаблАМС);
		
		// Контейнеры.
		Группы.Очистить();
		Группы.Добавить(Перечисления.УБХГруппыРазмещения.Контейнер);
		Группы.Добавить(Перечисления.УБХГруппыРазмещения.ПлощадкаЗУ);
		
		ВывестиГруппуРазмещения(ВыборкаЗапросы, ".2", ТабличныйДокумент, ШапкаПодключение, 
			ШапкаТаблКонтейнер, Группы, "Перечень оборудования для размещения в контейнере",
				": без размещения в контейнере", НомерКомплекта, ДеталиТаблКонтейнер);
		
		// Электроснабжение.
		ШапкаПодключение.Параметры.НомерТабл 	= "2." + Формат(НомерКомплекта, "ЧГ=0") + ".3";
		ШапкаПодключение.Параметры.Заголовок 	= "Обеспечение подключения к электроснабжению";
		
		ВыводитьДоступЭС = Истина;
		Если НЕ ЗначениеЗаполнено(ВыборкаЗапросы.НапряжениеПитания)
			И НЕ ЗначениеЗаполнено(ВыборкаЗапросы.Мощность) 
			И НЕ ЗначениеЗаполнено(ВыборкаЗапросы.КатегорияЭлектроснабжения) Тогда				
			ШапкаПодключение.Параметры.Дополнение 	= ": без доступа к электроснабжению.";
			ВыводитьДоступЭС = Ложь;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ШапкаПодключение);

		Если ВыводитьДоступЭС Тогда
			ДеталиПодключение.Параметры.Характеристика 			= "Напряжение питания, В";
			ДеталиПодключение.Параметры.ЗначениеХарактеристики 	= ВыборкаЗапросы.НапряжениеПитания;
			ТабличныйДокумент.Вывести(ДеталиПодключение);
			
			ДеталиПодключение.Параметры.Характеристика 			= "Потребляемая мощность, Вт";
			ДеталиПодключение.Параметры.ЗначениеХарактеристики 	= ВыборкаЗапросы.Мощность;
			ТабличныйДокумент.Вывести(ДеталиПодключение);
			
			ДеталиПодключение.Параметры.Характеристика 			= "Категория электроснабжения потребителя";
			ДеталиПодключение.Параметры.ЗначениеХарактеристики 	= ВыборкаЗапросы.КатегорияЭлектроснабжения;
			ТабличныйДокумент.Вывести(ДеталиПодключение);
		КонецЕсли;
		
		НомерКомплекта = НомерКомплекта + 1;
			
	КонецЦикла;

	// Подвал и Итоги.
	// Итоговая таблица.
	ШапкаТаблАренда      = МакетПечати.ПолучитьОбласть("ШапкаТаблАренда");
	ДеталиТаблАренда     = МакетПечати.ПолучитьОбласть("ДеталиТаблАренда");
	ИтогиТаблАренда   	 = МакетПечати.ПолучитьОбласть("ИтогиТаблАренда");
	ИтогиТаблАрендаЗаГод = МакетПечати.ПолучитьОбласть("ИтогиТаблАрендаЗаГод");
	Подвал               = МакетПечати.ПолучитьОбласть("Подвал");
	
	ТабличныйДокумент.Вывести(ШапкаТаблАренда);

	Номер = 1;
	
	СуммаПоТарифу 	= 0;
	СуммаНДС 		= 0;
	СпецСкидка      = 0;
	Сумма           = 0;
	СуммаСНДС       = 0;
	
	Пока ВыборкаОбъекты.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДеталиТаблАренда.Параметры, ВыборкаОбъекты);	
		ДеталиТаблАренда.Параметры.Номер = Номер;	
		
		ТабличныйДокумент.Вывести(ДеталиТаблАренда);
		
		Номер = Номер + 1;
		
		СуммаПоТарифу 	= СуммаПоТарифу + ВыборкаОбъекты.СуммаПоТарифу;
		СуммаНДС		= СуммаНДС      + ВыборкаОбъекты.СуммаНДС;
		СпецСкидка      = СпецСкидка    + ВыборкаОбъекты.СпецСкидка;
		Сумма           = Сумма         + ВыборкаОбъекты.Сумма;
		СуммаСНДС       = СуммаСНДС     + ВыборкаОбъекты.СуммаСНДС;

	КонецЦикла;

	ИтогиТаблАренда.Параметры.СуммаПоТарифу 			= СуммаПоТарифу;
	ИтогиТаблАренда.Параметры.СуммаПоТарифуНДС 			= УБХОбщегоНазначенияКлиентСервер.РассчитатьСуммуНДС(СуммаПоТарифу,
	УБХОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДС(Перечисления.СтавкиНДС.НДС20), Ложь);
	
	ИтогиТаблАренда.Параметры.СуммаПоТарифуСНДС 		= СуммаПоТарифу + ИтогиТаблАренда.Параметры.СуммаПоТарифуНДС;
	ИтогиТаблАренда.Параметры.СпецСкидка 				= СпецСкидка;
	ИтогиТаблАренда.Параметры.Сумма 					= Сумма;
	ИтогиТаблАренда.Параметры.СуммаНДС 					= СуммаНДС;
	ИтогиТаблАренда.Параметры.СуммаСНДС 				= СуммаСНДС;

	ТабличныйДокумент.Вывести(ИтогиТаблАренда);
	
	// Заполним итоговые суммы за год (12 месяцев).
	ИтогиТаблАрендаЗаГод.Параметры.ИтогоСумма 				= СуммаПоТарифу * 12;
	ИтогиТаблАрендаЗаГод.Параметры.ИтогоСпецСкидка 			= СпецСкидка * 12;
	ИтогиТаблАрендаЗаГод.Параметры.ИтогоСуммаСоСкидкой 		= Сумма * 12;
	ИтогиТаблАрендаЗаГод.Параметры.ИтогоНДС 				= СуммаНДС * 12;
	ИтогиТаблАрендаЗаГод.Параметры.ИтогоСуммаСНДС 			= СуммаСНДС * 12;
	
	ТабличныйДокумент.Вывести(ИтогиТаблАрендаЗаГод);
	ТабличныйДокумент.Вывести(Подвал);

    Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиГруппуРазмещения(ВыборкаЗапросы, НомерТаблицы, ТабличныйДокумент, ШапкаПодключение, 
		ШапкаТаблицы, Группы, Заголовок, ЗаголовокБез, НомерКомплекта, ДеталиТаблицы)
	
	ШапкаПодключениеВыведена = Ложь;
	
	НомерСтроки = 1;
	Для Каждого Группа Из Группы Цикл
		ВыборкаОборудование = ВыборкаЗапросы.ПереченьОборудования.Выбрать();
		
		Пока ВыборкаОборудование.НайтиСледующий(Новый Структура("ГруппаРазмещения", Группа)) Цикл
			
			Если Не ШапкаПодключениеВыведена Тогда
				ШапкаПодключение.Параметры.НомерТабл 	= "2." + Формат(НомерКомплекта, "ЧГ=0") + НомерТаблицы;
				ШапкаПодключение.Параметры.Заголовок 	= Заголовок;
				ШапкаПодключение.Параметры.Дополнение 	= "";
				
				ТабличныйДокумент.Вывести(ШапкаПодключение);
				ТабличныйДокумент.Вывести(ШапкаТаблицы);
				
				ШапкаПодключениеВыведена = Истина;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ДеталиТаблицы.Параметры, ВыборкаОборудование);
			ДеталиТаблицы.Параметры.Номер = НомерСтроки;
			
			ТабличныйДокумент.Вывести(ДеталиТаблицы);
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЦикла;
	
	ВыборкаОборудование.Сбросить();
	
	Если Не ШапкаПодключениеВыведена Тогда
		ШапкаПодключение.Параметры.НомерТабл 	= "2." + Формат(НомерКомплекта, "ЧГ=0") + НомерТаблицы;
		ШапкаПодключение.Параметры.Заголовок 	= Заголовок;
		ШапкаПодключение.Параметры.Дополнение 	= ЗаголовокБез;
		
		ТабличныйДокумент.Вывести(ШапкаПодключение);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти
	
#КонецЕсли
