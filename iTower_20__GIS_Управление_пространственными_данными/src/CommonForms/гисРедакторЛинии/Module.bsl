
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.Геометрия) Тогда
		ЗагрузитьГеометрию(Параметры.Геометрия);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	ЭтотОбъект.Закрыть(ГеометрияВJson());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает геометрию, введенную на форме, в формате GeoJson.
// Геометрия будет типа LineString.
// 
// Возвращаемое значение:
//   - Строка - геометрия в формате GeoJson.
//
&НаСервере
Функция ГеометрияВJson()
	Если ОсновнойКонтур.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Линия = Новый Массив;
	Для Каждого Строка Из ОсновнойКонтур Цикл
		Координаты = Новый Массив;
		Координаты.Добавить(Строка.Долгота);
		Координаты.Добавить(Строка.Широта);
		Линия.Добавить(Координаты);
	КонецЦикла;
	
	Возврат гисГисСервер.ПолучитьGeoJson(Линия, "LineString");
КонецФункции

// Загружает на форму геометрию типа LineString сохраненную в формате GeoJson.
// Если тип другой - выдает сообщение об ошибке.
//
// Параметры:
//  ГеометрияСтрока	 - Строка - геометрия в формате GeoJson.
//
&НаСервере
Процедура ЗагрузитьГеометрию(ГеометрияСтрока)
	Геометрия = гисРаботаСJson.ПрочитатьНативно(ГеометрияСтрока);
	
	geometry = Геометрия.geometry;
	Если geometry.type <> "LineString" Тогда
		ОбщегоНазначения.СообщитьПользователю("Ошибка при загрузке геометрии!");
		Возврат;
	КонецЕсли;
	
	Линия = geometry.coordinates;
	Для Каждого Координаты Из Линия Цикл
		НоваяСтрока = ОсновнойКонтур.Добавить();
		НоваяСтрока.Долгота = Координаты[0];
		НоваяСтрока.Широта = Координаты[1];
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
