
////////////////////////////////////////////////////////////////////////
// СОСТАВЫ ДАННЫХ

#Область СоставыДанных

// Функция возвращает виды изменяемых данных (исключение Реквизит)
// Возвращаемое значение:
//   - Строка
Функция ВидыИзменяемыхДанных() Экспорт
	
	// Инициализация
	МассивВидов = Новый Массив;
	
	МассивВидов.Добавить(ВидДанныхКлассификатор());
	МассивВидов.Добавить(ВидДанныхДополнительноеСвойство());
	
	Возврат МассивВидов;
		
КонецФункции

// Функция возвращает видыи данных (Реквизит)
// Возвращаемое значение:
//   - Строка
Функция ВидДанныхРеквизит() Экспорт
	
	Возврат "Реквизит";
	
КонецФункции

// Функция возвращает видыи данных (Классификатор)
// Возвращаемое значение:
//   - Строка
Функция ВидДанныхКлассификатор() Экспорт
	
	Возврат "Классификатор";
	
КонецФункции

// Функция возвращает видыи данных (ДополнительноеСвойство)
// Возвращаемое значение:
//   - Строка
Функция ВидДанныхДополнительноеСвойство() Экспорт
	
	Возврат "ДополнительноеСвойство";
	
КонецФункции


// "Константы" - Виды реквизитов: стандартный, обычный, служебный (общие реквизиты)
Функция ВидРеквизитаСтандартный() Экспорт
	
	Возврат "Стандартный";
	
КонецФункции

Функция ВидРеквизитаОбычный() Экспорт
	
	Возврат "Обычный";
	
КонецФункции

Функция ВидРеквизитаСлужебный() Экспорт
	
	Возврат "Служебный";	
	
КонецФункции


// Метод возвращает параметры вывода реквизитов (можно настроить свои параметры)
//
// Параметры:
//  НаборВидовРеквизитов - Структура - Структура (только ключи), см. ВидРеквизитаСтандартный(), ВидРеквизитаОбычный(), ВидРеквизитаСлужебный()
//  ОграниченияВывода 	 - Массив, Неопределено - Массив структур вида (ВидРеквизита:Имя реквизита)
//						   ОграчениеВывода распространяется только на виды наборов, указанных о ограничении,
//                         т.е. если указан хотя бы один служебный реквизит, то для служебных реквизитов "заработает" ограничение
//                         (отсекаются не указанные в наборе). Аналогично для обычных и стандартных реквизитов.
// 
// Возвращаемое значение:
//  Структура - 
//
Функция ПараметрыВыводаРеквизитов(НаборВидовРеквизитов, ОграниченияВывода = Неопределено) Экспорт
	
	Результат = Новый Структура();
	
	Результат.Вставить("НаборВидовРеквизитов", НаборВидовРеквизитов);
	Результат.Вставить("ОграниченияВывода", ОграниченияВывода);
	
	Возврат Результат;
	
КонецФункции

// Метод возвращает параметры вывода реквизитов (стандартные и обычные)
//
// Параметры:
//  ОграниченияВывода 	 - Массив, Неопределено - Массив структур вида (ВидРеквизита:Имя реквизита)
//						   ОграчениеВывода распространяется только на виды наборов, указанных о ограничении,
//                         т.е. если указан хотя бы один обычный реквизит, то для обычных реквизитов "заработает" ограничение
//                         (отсекаются не указанные в наборе). Аналогично для стандартных реквизитов.
// 
// Возвращаемое значение:
//  Структура - 
//
Функция ВыводитьРеквизитыНаборСтандартныйОбычный(ОграниченияВывода = Неопределено) Экспорт
	
	Результат = Новый Структура();
			
	НаборВидовРеквизитов = Новый Структура();	
	НаборВидовРеквизитов.Вставить(ВидРеквизитаОбычный());
	НаборВидовРеквизитов.Вставить(ВидРеквизитаСтандартный());
	
	Результат.Вставить("НаборВидовРеквизитов", НаборВидовРеквизитов);
	Результат.Вставить("ОграниченияВывода", ОграниченияВывода);
		
	Возврат Результат;
		
КонецФункции

// Метод возвращает параметры вывода реквизитов (стандартные и обычные)
//
// Параметры:
//  ОграниченияВывода 	 - Массив, Неопределено - Массив структур вида (ВидРеквизита:Имя реквизита)
//						   ОграчениеВывода распространяется только на виды наборов, указанных о ограничении,
//                         т.е. если указан хотя бы один стандартны реквизит, то для стандартных реквизитов "заработает" ограничение
//                         (отсекаются не указанные в наборе). Аналогично для обычных и служебных реквизитов.
// 
// Возвращаемое значение:
//  Структура - 
//
Функция ВыводитьВсеРеквизиты(ОграниченияВывода = Неопределено) Экспорт
	
	Результат = Новый Структура();
			
	НаборВидовРеквизитов = Новый Структура();	
	НаборВидовРеквизитов.Вставить(ВидРеквизитаОбычный());
	НаборВидовРеквизитов.Вставить(ВидРеквизитаСтандартный());
	НаборВидовРеквизитов.Вставить(ВидРеквизитаСлужебный());
	
	Результат.Вставить("НаборВидовРеквизитов", НаборВидовРеквизитов);
	Результат.Вставить("ОграниченияВывода", ОграниченияВывода);
			
	Возврат Результат;
		
КонецФункции

Функция ПолучитьОграниченияСоставаДанныхБП() Экспорт

	ОграниченияВида = Новый Массив;
	ОграниченияВида.Добавить(Новый Структура(УправлениеНСИКлиентСервер.ВидРеквизитаСлужебный(), "СтатусЗаписи"));
	ОграниченияВида.Добавить(Новый Структура(УправлениеНСИКлиентСервер.ВидРеквизитаСлужебный(), "ИдентификаторХэш"));
	
	ОграниченияВида.Добавить(Новый Структура(УправлениеНСИКлиентСервер.ВидРеквизитаСтандартный(), "Наименование"));
	ОграниченияВида.Добавить(Новый Структура(УправлениеНСИКлиентСервер.ВидРеквизитаСтандартный(), "Родитель"));
	ОграниченияВида.Добавить(Новый Структура(УправлениеНСИКлиентСервер.ВидРеквизитаСтандартный(), "Владелец"));
	
	Возврат ОграниченияВида;		

КонецФункции

#КонецОбласти


////////////////////////////////////////////////////////////////////////
// СТРУКТУРЫ СУЩНОСТЕЙ

#Область СтруктурыСущностей

// Методы возвращают структуры сущностей ...

Функция СтруктураНастройкиСправочника() Экспорт
	
	Результат = Новый Структура("Имя, Представление, ОписаниеТипа, ПустоеЗначение, ПроверкаЗаполнения, ВидДанных");
	Возврат Результат;
	
КонецФункции

Функция СтруктураНастройкиСправочникаСоЗначением() Экспорт
	
	Результат = СтруктураНастройкиСправочника();
	Результат.Вставить("Значение");
	Возврат Результат;
	
КонецФункции

Функция СтруктураПараметрыПоиска() Экспорт
	
	Результат = Новый Структура();				
	Результат.Вставить("ИскатьНечеткимПоиском");
	Результат.Вставить("ИскатьПоСинонимам");
	Результат.Вставить("ИскатьСловоЦеликом");
	Результат.Вставить("КоличествоЗнаков");
	Результат.Вставить("КоличествоОтличий");
	Результат.Вставить("КоличествоСекундОжидания");
	Результат.Вставить("РазбиватьФразуНаСлова");
	Результат.Вставить("РазмерПорции");

		
	Возврат Результат;
	
КонецФункции

Функция СтруктураПараметрыКлассификатора() Экспорт
	
	Результат = Новый Структура();				
	Результат.Вставить("СпособИспользованияКлассификации");
	Результат.Вставить("НаследоватьАтрибуты");
	Результат.Вставить("МножественнаяКлассификация");
	Результат.Вставить("ТолькоТерминальныеГруппы");	
	Результат.Вставить("НаследоватьПравила");
	Результат.Вставить("Основной");
	Результат.Вставить("НомерПоПорядку");
	Результат.Вставить("КонтролироватьОбязательность");
	Возврат Результат;
	
КонецФункции

Функция СтруктураПараметрыСправочникаНСИ(ПолноеИмя, Классификация = Истина, 
	Реквизиты = Истина, Триггеры = Истина, Версионирование = Истина) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ПолноеИмя", ПолноеИмя);
	Результат.Вставить("Классификация", Классификация);
	Результат.Вставить("Реквизиты", Реквизиты);
	Результат.Вставить("Триггеры", Триггеры);
	Результат.Вставить("Версионирование", Версионирование);
	
	Возврат Результат;
		
КонецФункции

Функция СтруктураЯрлыки() Экспорт
	
	Возврат Новый Структура("Ярлык, ДатаУстановкиЯрлыка, Пользователь");
		
КонецФункции

Функция СтруктураСвязи() Экспорт
	
	Возврат Новый Структура("Справочник1, Справочник2, ВидСвязи, ПроцентСоответствия");
		
КонецФункции

#КонецОбласти


