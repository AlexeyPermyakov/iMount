#Область ПрограммныйИнтерфейс

// Функция формирует представление установленного отбора формы выбора.
//
// Параметры:
//  Форма				 - 	УправляемаяФорма - форма, для которой формируется представление отбора.
//  ЭлементДекорация	- 	ДекорацияФормы, Неопределено - Декорация формы для отображения отбора. Если не установлено или передано Неопределено - будет создана новая декорация.
//  ОбъектМетаданных	 - 	ОбъектМетаданных, Неопределено - используемый объект метаданных. Если значение указано, вместо имен полей будут по возможности выводиться их синонимы.
//  ПриоритетныеПоля	 - 	Массив, Неопределено - список полей отбора, которые (если установлены) должны всегда выводиться в начале строки.
//  НеприоритетныеПоля	 - 	Массив, Неопределено - список полей отбора, которые (если установлены) должны всегда выводиться после прочих параметров.
//  СинонимыПолей		 - 	Структура, Неопределено - Синонимы полей, отличные от синонимов реквизитов. Позволяет переопределить синоним поля для конкретного вызова метода.
//
Процедура УстановитьПредставлениеОтбора(Форма, Знач ЭлементДекорация = Неопределено, ОбъектМетаданных = Неопределено, Знач ПриоритетныеПоля = Неопределено, Знач НеприоритетныеПоля = Неопределено, СинонимыПолей = Неопределено) Экспорт
	
	Отбор = Форма.Параметры.Отбор;
	
	Если Не Отбор.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыОтбора = Новый Массив;
	// Получаем описание всех полей объекта метаданного из конфигурации.
	Если ОбъектМетаданных = Неопределено Тогда
		ТаблицаОписанияСвойствОбъекта = Неопределено;
	Иначе
		ТаблицаОписанияСвойствОбъекта = ОбщегоНазначения.ОписаниеСвойствОбъекта(ОбъектМетаданных, "Имя, Синоним");
	КонецЕсли;
	
	Если ПриоритетныеПоля = Неопределено Тогда
		ПриоритетныеПоля = Новый Массив;
	КонецЕсли;

	Если НеприоритетныеПоля = Неопределено Тогда
		НеприоритетныеПоля = Новый Массив;
	КонецЕсли;
	
	Для Каждого ТекИмяОтбора Из ПриоритетныеПоля Цикл
		
		Если Отбор.Свойство(ТекИмяОтбора) Тогда
			ДобавитьОписаниеЭлементаОтбора(ТекИмяОтбора, Отбор[ТекИмяОтбора], ЭлементыОтбора, ТаблицаОписанияСвойствОбъекта, СинонимыПолей);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из Отбор Цикл
		
		Если НеприоритетныеПоля.Найти(КлючИЗначение.Ключ) <> Неопределено
			ИЛИ ПриоритетныеПоля.Найти(КлючИЗначение.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьОписаниеЭлементаОтбора(КлючИЗначение.Ключ, КлючИЗначение.Значение, ЭлементыОтбора, ТаблицаОписанияСвойствОбъекта, СинонимыПолей);
		
	КонецЦикла;
	
	Для Каждого ТекИмяОтбора Из НеприоритетныеПоля Цикл
		
		Если Отбор.Свойство(ТекИмяОтбора) Тогда
			ДобавитьОписаниеЭлементаОтбора(ТекИмяОтбора, Отбор[ТекИмяОтбора], ЭлементыОтбора, ТаблицаОписанияСвойствОбъекта, СинонимыПолей);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЭлементыОтбора.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыОтбора.Удалить(ЭлементыОтбора.ВГраница());
	
	Если ЭлементДекорация = Неопределено Тогда
		ИмяЭлемента = "ОтборПредставление" + СтрЗаменить(Новый УникальныйИдентификатор, "-", "");
		ЭлементДекорация = Форма.Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"));
		ЭлементДекорация.Вид = ВидДекорацииФормы.Надпись;
		ЭлементДекорация.АвтоМаксимальнаяШирина = Ложь;
		Форма.Элементы.Переместить(ЭлементДекорация, ЭлементДекорация.Родитель, Форма.ПодчиненныеЭлементы[0]);
	КонецЕсли;
	
	ЭлементДекорация.Заголовок = Новый ФорматированнаяСтрока(ЭлементыОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьОписаниеЭлементаОтбора(Знач ИмяЭлементаОтбора, Знач ЗначениеЭлементаОтбора, Описания, ТаблицаОписанияСвойствОбъекта, СинонимыПолей)
	
	ИмяПоля = ИмяЭлементаОтбора;
	
	Если СинонимыПолей <> Неопределено И СинонимыПолей.Свойство(ИмяЭлементаОтбора) Тогда
		ИмяПоля = СинонимыПолей[ИмяЭлементаОтбора];
	ИначеЕсли ТаблицаОписанияСвойствОбъекта <> Неопределено Тогда
		СтрокаОписание = ТаблицаОписанияСвойствОбъекта.Найти(ИмяЭлементаОтбора, "Имя");
		Если СтрокаОписание <> Неопределено И ЗначениеЗаполнено(СтрокаОписание.Синоним) Тогда
			ИмяПоля = СтрокаОписание.Синоним;
		КонецЕсли;
	Иначе
		// Используем значение по умолчанию, которым инициализировано ИмяПоля.
	КонецЕсли;
	
	Описания.Добавить(ИмяПоля);
	Описания.Добавить(": ");
	Если ЗначениеЗаполнено(ЗначениеЭлементаОтбора) Тогда
		
		Если ТипЗнч(ЗначениеЭлементаОтбора) = Тип("Массив") ИЛИ ТипЗнч(ЗначениеЭлементаОтбора) = Тип("ФиксированныйМассив") Тогда
			ПредставленияЭлементов = Новый Массив;
			Для Каждого ТекЭлемент Из ЗначениеЭлементаОтбора Цикл
				Если ЗначениеЗаполнено(ТекЭлемент) Тогда 
					ПредставленияЭлементов.Добавить(Строка(ТекЭлемент));
				Иначе
					ПредставленияЭлементов.Добавить(НСтр("ru = '<Пустое значение>'"));
				КонецЕсли;
			КонецЦикла;
			ТекстЗначения = СтрСоединить(ПредставленияЭлементов, "; ");
		Иначе
			ТекстЗначения = Строка(ЗначениеЭлементаОтбора);
			
		КонецЕсли;
		
	Иначе
		ТекстЗначения = НСтр("ru = '<Пустое значение>'");
	КонецЕсли;
	Описания.Добавить(Новый ФорматированнаяСтрока(Строка(ТекстЗначения), ,ЦветаСтиля.ТекстПредопределенногоЗначения));
	
	Описания.Добавить("; ");	
	
КонецПроцедуры

#КонецОбласти
