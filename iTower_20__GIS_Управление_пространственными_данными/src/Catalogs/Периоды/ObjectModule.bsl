
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

// Процедура - обработчик события объекта "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		Возврат; // отказ
	ИначеЕсли НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Возврат; // отказ
	КонецЕсли;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоГода(ДатаНачала));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
		ЭтотОбъект.Код = Лев(Наименование, 4);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.ДевятьМесяцев Тогда
		УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,   НачалоГода(ДатаНачала));
		УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, "Девять месяцев " + Формат(ДатаНачала, "ДФ='гггг ""г.""'"));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		Если ДатаНачала < ДобавитьМесяц(НачалоГода(ДатаНачала), 6) Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала, НачалоГода(ДатаНачала));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, "1 полугодие " + Формат(ДатаНачала, "ДФ='гггг ""г.""'"));
		Иначе 
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала, ДобавитьМесяц(НачалоГода(ДатаНачала), 6));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, "2 полугодие " + Формат(ДатаНачала, "ДФ='гггг ""г.""'"));
		КонецЕсли;
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоКвартала(ДатаНачала));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоМесяца(ДатаНачала));
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	ИначеЕсли Периодичность = Перечисления.Периодичность.Декада Тогда
		
		Если День(ДатаНачала) < 10 Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоМесяца(ДатаНачала));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, "1 декада. " + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		ИначеЕсли День(ДатаНачала) < 20 Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    УБХОбщегоНазначения.ДобавитьДень(НачалоМесяца(ДатаНачала), 10));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, "2 декада. " + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		Иначе 
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    УБХОбщегоНазначения.ДобавитьДень(НачалоМесяца(ДатаНачала), 20));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, "3 декада. " + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		КонецЕсли;
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		
		Если День(ДатаНачала) < 7 Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    ?(День(НачалоНедели(ДатаНачала))>День(ДатаНачала),НачалоМесяца(ДатаНачала),НачалоНедели(ДатаНачала)));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ?(УБХОбщегоНазначения.НачалоНеделиПоМесяцу(ДатаНачала)=НачалоМесяца(ДатаНачала),"1 неделя. ","2 неделя. ") + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		ИначеЕсли День(ДатаНачала) < 14 Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ?(УБХОбщегоНазначения.НачалоНеделиПоМесяцу(УБХОбщегоНазначения.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-1))<=НачалоМесяца(ДатаНачала),"2 неделя. ","3 неделя. ") + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		ИначеЕсли День(ДатаНачала) < 21 Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ?(УБХОбщегоНазначения.НачалоНеделиПоМесяцу(УБХОбщегоНазначения.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-2))<=НачалоМесяца(ДатаНачала),"3 неделя. ","4 неделя. ") + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		ИначеЕсли День(ДатаНачала) < 28 Тогда
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ?(УБХОбщегоНазначения.НачалоНеделиПоМесяцу(УБХОбщегоНазначения.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-3))<=НачалоМесяца(ДатаНачала),"4 неделя. ","5 неделя. ") + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		Иначе
			УБХОбщегоНазначения.УстановитьНовоеЗначение(ДатаНачала,    НачалоНедели(ДатаНачала));
			УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ?(УБХОбщегоНазначения.НачалоНеделиПоМесяцу(УБХОбщегоНазначения.ДобавитьИнтервал(ДатаНачала,Перечисления.Периодичность.Неделя,-4))<=НачалоМесяца(ДатаНачала),"5 неделя. ","6 неделя. ") + Формат(ДатаНачала, "ДФ='ММММ гггг ""г.""'"));
		КонецЕсли;
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
	
	Иначе
		Справочники.Периоды.ОпределитьДатуОкончания(ДатаНачала, ДатаОкончания, Периодичность);
		УБХОбщегоНазначения.УстановитьНовоеЗначение(Наименование, ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания)));
	КонецЕсли;
	
	
КонецПроцедуры

// Процедура - обработчик события объекта "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка ИЛИ ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Произвольный Тогда
		Заполнить(Неопределено);
	КонецЕсли; 
	                
	ШапкаОшибки = "Период """ + ЭтотОбъект + """ не может быть записан:";
	
	Если (НЕ ЗначениеЗаполнено(Периодичность)) И (НЕ Произвольный) Тогда
		ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ШапкаОшибки + Символы.ПС + "- Периодичность не задана!"); 
	КонецЕсли;
	
	Если ДатаНачала = '00010101' Тогда
		ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ШапкаОшибки + Символы.ПС + "- Не заполнен реквизит ""Дата начала""!"); 
	КонецЕсли;
	
	Если ДатаОкончания = '00010101' Тогда
		ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ШапкаОшибки + Символы.ПС + "- Не заполнен реквизит ""Дата окончания""!"); 
	КонецЕсли;
	
	Попытка
		Если  Периодичность <> Перечисления.Периодичность.Год Тогда
			СтрокаГод = ПредставлениеПериода(НачалоГода(ДатаНачала), КонецГода(ДатаОкончания));
			КраткоеНаименование = СокрЛП(СтрЗаменить(Наименование,СтрокаГод,""));
		Иначе	
			КраткоеНаименование = Наименование;
		КонецЕсли;
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Периоды.Ссылка,
	|	РАЗНОСТЬДАТ(Периоды.ДатаНачала, Периоды.ДатаОкончания, ДЕНЬ) КАК РазностьДат
	|ИЗ
	|	Справочник.Периоды КАК Периоды
	|ГДЕ
	|	(НЕ Периоды.Произвольный)
	|	И (Периоды.ДатаНачала <= &ДатаНачала
	|				И Периоды.ДатаОкончания > &ДатаОкончания
	|			ИЛИ Периоды.ДатаНачала < &ДатаНачала
	|				И Периоды.ДатаОкончания >= &ДатаОкончания)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазностьДат";
	
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	
	Результат=Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда // Есть вышестоящий период
		
		Родитель=Результат.Ссылка;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Родитель) и (ДатаНачала < Родитель.ДатаНачала или ДатаОкончания > Родитель.ДатаОкончания) Тогда
		ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ШапкаОшибки + СИмволы.ПС + "- интервал """ + Наименование + """ выходит за пределы интервала - родителя """ + Родитель + """!"); 
	КонецЕсли;
	// Проверим существование периода с совпадающим наименованием.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Периоды.Ссылка КАК Ссылка,
		|	Периоды.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Периоды КАК Периоды
		|ГДЕ
		|	Периоды.Наименование = &Наименование
		|	И Периоды.Ссылка <> &Ссылка
		|	И НЕ Периоды.ПометкаУдаления
		|	И Периоды.Произвольный = ЛОЖЬ";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекстСообщения = НСтр("ru = 'Период с наименованием %Наименование% уже существует. Запись отменена.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", Строка(Наименование));
		ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецЦикла;

	Если НЕ Произвольный Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Периоды.Ссылка КАК Ссылка,
		|	Периоды.ДатаНачала,
		|	Периоды.ДатаОкончания
		|ИЗ
		|	Справочник.Периоды КАК Периоды
		|ГДЕ
		|	Периоды.Ссылка <> &Ссылка
		|	И Периоды.Периодичность = &Периодичность
		|	И (Периоды.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
		|			ИЛИ Периоды.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания)
		|	И Периоды.Произвольный = ЛОЖЬ";
		Запрос.УстановитьПараметр("Ссылка",        Ссылка);
		Запрос.УстановитьПараметр("Периодичность", Периодичность);
		Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ШапкаОшибки + Символы.ПС + "- интервал """ + Наименование + """ пересекается с существующим периодом """ + Выборка.Ссылка + """!"); 
		КонецЦикла;
	КонецЕсли;	
	
	
КонецПроцедуры

// Процедура - обработчик события объекта "ПриЗаписи".
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ШапкаОшибки = "Период """ + ЭтотОбъект + """ не может быть записан:";
	
    Запрос = Новый Запрос(
    "ВЫБРАТЬ
    |	Периоды.Ссылка
    |ИЗ
    |	Справочник.Периоды КАК Периоды
    |ГДЕ
    |	Периоды.Родитель = &Родитель"
    );
    Запрос.УстановитьПараметр("Родитель", Ссылка);
    
    Выборка = Запрос.Выполнить().Выбрать();
    
    Пока Выборка.Следующий() Цикл
        
        ВыборкаСсылка = Выборка.Ссылка;
        
        Объект = ВыборкаСсылка.ПолучитьОбъект();
        
        Объект.Произвольный = Произвольный;
       
        Если Объект.Произвольный = ВыборкаСсылка.Произвольный Тогда
        	Продолжить;
        КонецЕсли;
        
        Попытка
            Объект.Записать();
        Исключение
            ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(ШапкаОшибки + Символы.ПС + ОписаниеОшибки(), Отказ, ШапкаОшибки);
            Возврат;
        КонецПопытки; 
        
    КонецЦикла;
	
КонецПроцедуры
