#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Регион", Объект.Регион);
	
	Если ЗначениеЗаполнено(Объект.Регион) Тогда
		ПрочитатьДанныеПоРегиону();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФилиалыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Филиалы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
	    Возврат;
	КонецЕсли;    
	
	Элементы.Ответственнные.ОтборСтрок = Новый ФиксированнаяСтруктура("Подразделение", ТекущиеДанные.Значение);
		
КонецПроцедуры

&НаКлиенте
Процедура ФилиалыПередУдалением(Элемент, Отказ)
	
	НайденныеСтроки = Объект.Ответственнные.НайтиСтроки(Новый Структура("Подразделение", Элемент.ТекущиеДанные.Значение));
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Объект.Ответственнные.Удалить(НайденнаяСтрока);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственнныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ВладелецКлюча = Элементы.Филиалы.ТекущиеДанные;
	ТекущиеДанные = Элементы.Ответственнные.ТекущиеДанные;
	
	Если ВладелецКлюча <> Неопределено и ТекущиеДанные <> Неопределено Тогда
		
		Если НоваяСтрока Тогда
			ТекущиеДанные.Подразделение = ВладелецКлюча.Значение;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтветственнныеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("Подразделение", Элемент.ТекущиеДанные.Подразделение);
	ОтборСтрок.Вставить("Ответственный", Элемент.ТекущиеДанные.Ответственный);
	
	Если Объект.Ответственнные.НайтиСтроки(ОтборСтрок).Количество() > 1 Тогда
		Элемент.ТекущиеДанные.Ответственный = Неопределено;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выбран повторяющийся ответственный.'"));
		
		Объект.Ответственнные.Удалить(Объект.Ответственнные.НайтиПоИдентификатору(Элемент.ТекущаяСтрока));	
	ИначеЕсли Элемент.ТекущиеДанные.Ответственный = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		Объект.Ответственнные.Удалить(Объект.Ответственнные.НайтиПоИдентификатору(Элемент.ТекущаяСтрока));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанныеПоОтветственным();
	Оповестить("ОбновлениеОтветственных");
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанныеПоОтветственным();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьДанныеПоРегиону()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УБХПодразделенияРегионов.Подразделение КАК Подразделение,
		|	УБХПодразделенияРегионов.Ответственный КАК Ответственный
		|ИЗ
		|	РегистрСведений.УБХПодразделенияРегионов КАК УБХПодразделенияРегионов
		|ГДЕ
		|	УБХПодразделенияРегионов.Регион = &Регион
		|ИТОГИ ПО
		|	Подразделение";
	
	Запрос.УстановитьПараметр("Регион", Объект.Регион);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаПодразделение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПодразделение.Следующий() Цикл
		
		// Вставить обработку выборки ВыборкаПодразделение
	    Филиалы.Добавить(ВыборкаПодразделение.Подразделение);
		ВыборкаДетальныеЗаписи = ВыборкаПодразделение.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			ЗаполнитьЗначенияСвойств(Объект.Ответственнные.Добавить(), ВыборкаДетальныеЗаписи);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПоОтветственным()
		
	Ответственнные = Объект.Ответственнные.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ответственные.Ответственный КАК Ответственный,
		|	Ответственные.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_Ответственные
		|ИЗ
		|	&Ответственные КАК Ответственные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Ответственные.Ответственный КАК Ответственный,
		|	ВТ_Ответственные.Подразделение КАК Подразделение,
		|	ВЫРАЗИТЬ(ВТ_Ответственные.Подразделение КАК Справочник.УБХПодразделения).Владелец.ГруппаОрганизации КАК ГруппаОрганизации,
		|	ВЫРАЗИТЬ(ВТ_Ответственные.Подразделение КАК Справочник.УБХПодразделения).КодУчета КАК КодУчета
		|ИЗ
		|	ВТ_Ответственные КАК ВТ_Ответственные
		|ГДЕ
		|	ВЫРАЗИТЬ(ВТ_Ответственные.Подразделение КАК Справочник.УБХПодразделения).Владелец.ГруппаОрганизации В (&СписокГрупп)
		|ИТОГИ ПО
		|	ГруппаОрганизации";
	
	СписокГрупп = Новый Массив;
	СписокГрупп.Добавить(Перечисления.УБХГруппыОрганизаций.ЗИК);
	СписокГрупп.Добавить(Перечисления.УБХГруппыОрганизаций.Мегафон);
	СписокГрупп.Добавить(Перечисления.УБХГруппыОрганизаций.ПБК);
	
	Запрос.УстановитьПараметр("Ответственные", 	Ответственнные);
	Запрос.УстановитьПараметр("СписокГрупп", 	СписокГрупп);
	
	Ответственнные.Колонки.Добавить("Регион", Новый ОписаниеТипов("СправочникСсылка.УБХРегионы"));
	Ответственнные.ЗаполнитьЗначения(Объект.Регион, "Регион");
		
	//СтрокаОтветственные = "";
	//СтрокаФилиалы 		= "";
	//СтрокаКодыФилиалов 	= "";
	
	ГруппыОрганизации = Новый Соответствие;
	ГруппыОрганизации.Вставить(Перечисления.УБХГруппыОрганизаций.ЗИК, 		Новый Структура("Ответственные, Филиалы, КодыФилиалов","","",""));
	ГруппыОрганизации.Вставить(Перечисления.УБХГруппыОрганизаций.Мегафон, 	Новый Структура("Ответственные, Филиалы, КодыФилиалов","","",""));
	ГруппыОрганизации.Вставить(Перечисления.УБХГруппыОрганизаций.ПБК, 		Новый Структура("Ответственные, Филиалы, КодыФилиалов","","",""));

	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		ВыборкаГруппаОрганизации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаОрганизации.Следующий() Цикл
			
			ЗначенияГруппы = ГруппыОрганизации.Получить(ВыборкаГруппаОрганизации.ГруппаОрганизации);
			
			ВыборкаДетальныеЗаписи = ВыборкаГруппаОрганизации.Выбрать();
			
			СтрокаОтветственныеГруппа 	= "";
			СтрокаФилиалыГруппа 		= "";
			СтрокаКодыФилиаловГруппа 	= "";
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				СтрокаОтветственныеГруппа 	= СтрокаОтветственныеГруппа + ?(СтрокаОтветственныеГруппа = "", "", ", ") 	+ ВыборкаДетальныеЗаписи.Ответственный;
				СтрокаФилиалыГруппа 		= СтрокаФилиалыГруппа 		+ ?(СтрокаФилиалыГруппа = "", "", ", ") 		+ ВыборкаДетальныеЗаписи.Подразделение;
				СтрокаКодыФилиаловГруппа 	= СтрокаКодыФилиаловГруппа 	+ ?(СтрокаКодыФилиаловГруппа = "", "", ", ") 	+ ВыборкаДетальныеЗаписи.КодУчета;
				
			КонецЦикла;
			
			ЗначенияГруппы.Ответственные = СтрокаОтветственныеГруппа;
			ЗначенияГруппы.Филиалы		 = СтрокаФилиалыГруппа;
			ЗначенияГруппы.КодыФилиалов	 = СтрокаКодыФилиаловГруппа;
			
			//СтрокаОтветственные = СтрокаОтветственные + ?(СтрокаОтветственные = "", "", " ### ") 
			//	+ ВыборкаГруппаОрганизации.ГруппаОрганизации + ": " + СтрокаОтветственныеГруппа;
			//	
			//СтрокаФилиалы 		= СтрокаФилиалы + ?(СтрокаФилиалы = "", "", " ### ") 
			//	+ ВыборкаГруппаОрганизации.ГруппаОрганизации + ": " + СтрокаФилиалыГруппа;
			//	
			//СтрокаКодыФилиалов 	= СтрокаКодыФилиалов + ?(СтрокаКодыФилиалов = "", "", " ### ") 
			//	+ ВыборкаГруппаОрганизации.ГруппаОрганизации + ": " + СтрокаКодыФилиаловГруппа;
			
		КонецЦикла;
	КонецЕсли;
	
	ЭлементОбъект = Объект.Регион.ПолучитьОбъект();
	
	Для Каждого ГруппаКлючЗначение Из ГруппыОрганизации Цикл	
		Для Каждого ЗначКлючЗначение Из ГруппаКлючЗначение.Значение Цикл 
			ЭлементОбъект["" + ЗначКлючЗначение.Ключ + ГруппаКлючЗначение.Ключ] = ЗначКлючЗначение.Значение;
		КонецЦикла;
	КонецЦикла;
	
	ЭлементОбъект.Записать();
	
	НаборЗаписей = РегистрыСведений.УБХПодразделенияРегионов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регион.Установить(Объект.Регион);
	НаборЗаписей.Прочитать();
	
	НаборЗаписей.Загрузить(Ответственнные);
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти