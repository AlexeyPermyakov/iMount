
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Шаблон", Шаблон);
	Параметры.Свойство("ТипЗначения", ТипЗначения);
	Параметры.Свойство("ОбъектЗаполнения", ОбъектЗаполнения);
	Если Параметры.Свойство("ПараметрыОбъекты") Тогда
		ПараметрыОбъекты.ЗагрузитьЗначения(Параметры.ПараметрыОбъекты);
	КонецЕсли;
	Если Параметры.Свойство("ПараметрыОбработки") Тогда
		ПараметрыОбработки.ЗагрузитьЗначения(Параметры.ПараметрыОбработки);
	КонецЕсли;
	Если Параметры.Свойство("ПараметрыШаблона") Тогда
		ПараметрыШаблона.ЗагрузитьЗначения(Параметры.ПараметрыШаблона);
	КонецЕсли;
	Если Параметры.Свойство("ТипыПредметов") Тогда
		ТипыПредметов.ЗагрузитьЗначения(Параметры.ТипыПредметов);
	КонецЕсли;
	Если СтрСравнить(ОбъектЗаполнения, "ДанныеПроцесса") <> 0 Тогда
		ЗаполнитьДанныеПроцесса();
	КонецЕсли;
	Если СтрСравнить(ОбъектЗаполнения, "БизнесПроцесс.Предмет") <> 0 Тогда
		ЗаполнитьРеквизитыПредмета();
	КонецЕсли;
	ЗаполнитьПараметрыЗначения();
	ЗаполнитьРеквизитыПараметров();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДоступныеЗначенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПриВыбореЗначения(ВыбраннаяСтрока);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ПриВыбореЗначения(Элементы.ДоступныеЗначения.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанныеПроцесса()
	
	СтрокаДанныеПроцесса = ДоступныеЗначения.ПолучитьЭлементы().Добавить();
	СтрокаДанныеПроцесса.Поле = "ДанныеПроцесса";
	СтрокаДанныеПроцесса.Представление = "ДанныеПроцесса";
	
	ИдентификаторСтруктуры = Шаблон.УникальныйИдентификатор();
	УстановитьПривилегированныйРежим(Истина);
	СтруктураДанных = лм_УниверсальныеСтруктурыДанных.ПолучитьДанныеУниверсальнойСтруктуры(ИдентификаторСтруктуры);
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого Реквизит Из СтруктураДанных.Реквизиты Цикл
		ТипыРеквизита = Реквизит.ТипЗначения.Типы();
		Для Каждого Тип Из ТипыРеквизита Цикл
			Если ТипЗначения.СодержитТип(Тип) Тогда
				СтрокаЗначения = СтрокаДанныеПроцесса.ПолучитьЭлементы().Добавить();
				СтрокаЗначения.Поле = Реквизит.ИмяПоля;
				СтрокаЗначения.Представление = Реквизит.ИмяПоля;
				СтрокаЗначения.ДоступенДляВыбора = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПредмета()
	
	дзДоступныеЗначения = РеквизитФормыВЗначение("ДоступныеЗначения");
	СтрокаРеквизитыПредмета = дзДоступныеЗначения.Строки.Добавить();
	СтрокаРеквизитыПредмета.Поле = "БизнесПроцесс.Предмет";
	СтрокаРеквизитыПредмета.Представление = "БизнесПроцесс.Предмет";
	
	Для Каждого ТипПредмета Из ТипыПредметов Цикл
		ОбъектМетаданных = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(ТипПредмета.Значение);
		РеквизитыОбъекта = ОбщегоНазначения.ОписаниеСвойствОбъекта(ОбъектМетаданных, "Имя, Тип, Синоним");
		ДобавитьРеквизитыВДерево(РеквизитыОбъекта, СтрокаРеквизитыПредмета.Строки);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(дзДоступныеЗначения, "ДоступныеЗначения");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПараметров()
	
	дзДоступныеЗначения = РеквизитФормыВЗначение("ДоступныеЗначения");
	
	СтрокаПараметры = дзДоступныеЗначения.Строки.Найти("Параметры", "Поле");
	СтрокаОбщиеПараметры = дзДоступныеЗначения.Строки.Найти("ОбщиеПараметры", "Поле");
	
	Для Каждого СтрокаПараметра Из ПараметрыОбъекты Цикл
		Если СтрСравнить(ОбъектЗаполнения, СтрокаПараметра.Значение) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяПараметра = СтрокаПараметра.Значение;
		Если СтрНачинаетсяС(ИмяПараметра, "Параметры.") Тогда
			ИмяПараметра = СтрЗаменить(ИмяПараметра, "Параметры.", "");
			СтрокаРеквизитыПараметра = СтрокаПараметры.Строки.Добавить();
		Иначе
			ИмяПараметра = СтрЗаменить(ИмяПараметра, "ОбщиеПараметры.", "");
			СтрокаРеквизитыПараметра = СтрокаОбщиеПараметры.Строки.Добавить();
		КонецЕсли;
		СтрокаРеквизитыПараметра.Поле = ИмяПараметра;
		СтрокаРеквизитыПараметра.Представление = ИмяПараметра;
		
		ОписаниеТипов = Метаданные.ОпределяемыеТипы.ПредметЗадачи.Тип;
		ДоступныеТипы = ОписаниеТипов.Типы();
		Для Каждого Тип Из ДоступныеТипы Цикл
			ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
			РеквизитыОбъекта = ОбщегоНазначения.ОписаниеСвойствОбъекта(ОбъектМетаданных, "Имя, Тип, Синоним");
			ДобавитьРеквизитыВДерево(РеквизитыОбъекта, СтрокаРеквизитыПараметра.Строки); 
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(дзДоступныеЗначения, "ДоступныеЗначения");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыЗначения()
	
	СтрокаПараметрыОбработки = ДоступныеЗначения.ПолучитьЭлементы().Добавить();
	СтрокаПараметрыОбработки.Поле = "Параметры";
	СтрокаПараметрыОбработки.Представление = "Параметры";
	
	Для Каждого Параметр Из ПараметрыОбработки Цикл 
		СтрокаПараметра = СтрокаПараметрыОбработки.ПолучитьЭлементы().Добавить();
		ИмяПараметра = СтрЗаменить(Параметр.Значение, "Параметры.", "");
		СтрокаПараметра.Поле = ИмяПараметра;
		СтрокаПараметра.Представление = ИмяПараметра;
		СтрокаПараметра.ДоступенДляВыбора = Истина;
	КонецЦикла;
	
	СтрокаПараметрыШаблона = ДоступныеЗначения.ПолучитьЭлементы().Добавить();
	СтрокаПараметрыШаблона.Поле = "ОбщиеПараметры";
	СтрокаПараметрыШаблона.Представление = "ОбщиеПараметры";
	
	Для Каждого Параметр Из ПараметрыШаблона Цикл 
		СтрокаПараметра = СтрокаПараметрыШаблона.ПолучитьЭлементы().Добавить();
		ИмяПараметра = СтрЗаменить(Параметр.Значение, "ОбщиеПараметры.", "");
		СтрокаПараметра.Поле = ИмяПараметра;
		СтрокаПараметра.Представление = ИмяПараметра;
		СтрокаПараметра.ДоступенДляВыбора = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыВДерево(КоллекцияРеквизитов, СтрокиДерева)
	
	Для Каждого Реквизит Из КоллекцияРеквизитов Цикл
		Если СтрокиДерева.Найти(Реквизит.Имя, "Поле") = Неопределено Тогда
			Для Каждого Тип Из Реквизит.Тип.Типы() Цикл
				Если ТипЗначения.СодержитТип(Тип) Тогда
					СтрокаЗначения                   = СтрокиДерева.Добавить();
					СтрокаЗначения.Поле              = Реквизит.Имя;
					СтрокаЗначения.Представление     = ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя);
					СтрокаЗначения.ДоступенДляВыбора = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореЗначения(ВыбраннаяСтрока)
	
	ВыбранныеДанные = ДоступныеЗначения.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ВыбранныеДанные.ДоступенДляВыбора Тогда
		ВыбранноеЗначение = ВыбранныеДанные.Поле;
		ДанныеРодителя = ВыбранныеДанные.ПолучитьРодителя();
		
		Пока ДанныеРодителя <> Неопределено Цикл
			ВыбранноеЗначение = ДанныеРодителя.Поле + "." + ВыбранноеЗначение;
			ДанныеРодителя = ДанныеРодителя.ПолучитьРодителя();
		КонецЦикла;
		
		ОповеститьОВыборе(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти