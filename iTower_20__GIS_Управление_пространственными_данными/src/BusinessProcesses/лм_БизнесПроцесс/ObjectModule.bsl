
Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	// установить активную точку - старт
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	лм_ТочкиБизнесПроцессов.ИдентификаторТочки КАК ИдентификаторТочки
	               |ИЗ
	               |	РегистрСведений.лм_ТочкиБизнесПроцессов КАК лм_ТочкиБизнесПроцессов
	               |ГДЕ
	               |	лм_ТочкиБизнесПроцессов.Шаблон = &Шаблон
	               |	И лм_ТочкиБизнесПроцессов.ТипТочки = &ТипТочки
	               |	И лм_ТочкиБизнесПроцессов.НомерВерсии = &НомерВерсии";
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	Запрос.УстановитьПараметр("ТипТочки", Перечисления.лм_ТипыТочекБизнесПроцессов.ТочкаСтарта);
	Запрос.УстановитьПараметр("НомерВерсии", НомерВерсии);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.лм_ВыполнениеБизнесПроцессов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.БизнесПроцесс = Ссылка;
			МенеджерЗаписи.ИдентификаторТочки = Выборка.ИдентификаторТочки;
			МенеджерЗаписи.ИдентификаторТочкиВхода = ИдентификаторТочкиВхода;
			МенеджерЗаписи.Итерация = 1;
			МенеджерЗаписи.Активная = Истина;
			МенеджерЗаписи.Записать();
			
			ПараметрыБП = Новый Структура;
			ПараметрыБП.Вставить("БизнесПроцесс", 			Ссылка);
			ПараметрыБП.Вставить("АктивнаяТочка", 			Выборка.ИдентификаторТочки);
			ПараметрыБП.Вставить("ИтерацияАктивной", 		1);
			ПараметрыБП.Вставить("НаименованиеВыхода", 		"");
			ПараметрыБП.Вставить("НаименованиеВарианта",	"");
			ПараметрыБП.Вставить("УсловиеВыполнено",		Ложь);
	
			лм_БизнесПроцессы.ПерейтиКСледующейТочке(ПараметрыБП);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеПоУмолчаниюПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	ИзменениеПометкиУдаления = Ложь;
	Если Не Ссылка.Пустая() Тогда
		ТекПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления");
		Если ТекПометкаУдаления <> ПометкаУдаления Тогда
			ИзменениеПометкиУдаления = Истина;	
		КонецЕсли;
	КонецЕсли;
	
	Если Не ИзменениеПометкиУдаления Тогда	
		ЭтотОбъект.Завершен = ?(ЭтотОбъект.ДополнительныеСвойства.Свойство("Завершение"), Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры





