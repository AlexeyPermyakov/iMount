
#Область ОбработчикиСобытийЭлементовТаблицыФормыЗначения

&НаКлиенте
Процедура ЗначенияПоказательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.гисПоказатели.ФормаВыбора", Новый Структура("ТекущаяСтрока,МножественныйВыбор", Элементы.Значения.ТекущиеДанные.Показатель, Истина), ЭтотОбъект, , , ,
		Новый ОписаниеОповещения("ЗначенияПоказательНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоказательНачалоВыбораЗавершение(МассивЗначений, ДополнительныеПараметры) Экспорт
	Если МассивЗначений <> Неопределено Тогда
		ПервоеЗначение = Истина;
		Для Каждого Значение Из МассивЗначений Цикл
			// пока не заполним текущую строку, новые строки не добавляем
			Если ПервоеЗначение Тогда
				Если Элементы.Значения.ТекущиеДанные.Показатель <> Значение И 
					УжеЕстьПоказатель(Значение) Тогда
					ТекстСообщения = НСтр("ru = 'Показатель %1 уже есть в таблице!'; en = 'Indicator %1 is already in the table!'");
					ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Значение));
					Продолжить;
				КонецЕсли;
				Элементы.Значения.ТекущиеДанные.Показатель = Значение;
				ПервоеЗначение = Ложь;
			Иначе
				Если УжеЕстьПоказатель(Значение) Тогда
					ТекстСообщения = НСтр("ru = 'Показатель %1 уже есть в таблице!'; en = 'Indicator %1 is already in the table!'");
					ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Значение));
					Продолжить;
				КонецЕсли;
				НоваяСтрока = Объект.Значения.Добавить();
				НоваяСтрока.Показатель = Значение;
				
				УстановитьТипЗначенияНаСервере(НоваяСтрока.Показатель, НоваяСтрока.Значение);
			КонецЕсли;
		КонецЦикла;
		ОбновитьОтображениеДанных();
		ЗначенияПоказательПриИзменении(Элементы.ЗначенияПоказатель);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПоказательПриИзменении(Элемент)
	УстановитьТипЗначенияНаСервере(Элементы.Значения.ТекущиеДанные.Показатель, Элементы.Значения.ТекущиеДанные.Значение);
КонецПроцедуры


&НаКлиенте
Процедура ЗначенияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЭтоСправочник(Элементы.Значения.ТекущиеДанные.Показатель) Тогда
		ВладелецЗначений = ПолучитьВладельцаЗначений(Элементы.Значения.ТекущиеДанные.Показатель);
		Если ЗначениеЗаполнено(ВладелецЗначений) Тогда
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", ВладелецЗначений);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
		Иначе
			НовыйМассив = Новый Массив();
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УстановитьТипЗначенияНаСервере(Показатель, Значение)
	ТипПоказателя = Справочники.гисПоказатели.ПолучитьТипЗначения(Показатель.ТипЗначения, Показатель.СправочникИмя);
	Значение = ТипПоказателя.ПривестиЗначение(Значение);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСправочник(Показатель)
	Возврат Показатель.ТипЗначения = Перечисления.гисПоказателиТипы.Справочник;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВладельцаЗначений(Показатель)
	Возврат Показатель.ВладелецЗначений;
КонецФункции


&НаКлиенте
Функция УжеЕстьПоказатель(ТекущийОбъект)
	Строки = Объект.Значения.НайтиСтроки(Новый Структура("Показатель", ТекущийОбъект));
	Возврат Строки.Количество() > 0;
КонецФункции

#КонецОбласти
