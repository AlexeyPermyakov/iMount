

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДеревоТиповДанных();
	ЗаполнитьВыбранныеТипы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыДанныхПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные        = Элемент.ТекущиеДанные; 
	ОписаниеТипа         = ТекущиеДанные.ОписаниеТипа;
	ГруппаНастройкиТипов = Элементы.ГруппаНастройкиПримитивныхТипов;
	
	Если ОписаниеТипа.СодержитТип(Тип("Дата")) Тогда
		ГруппаНастройкиТипов.ТекущаяСтраница = Элементы.ГруппаНастройкиДаты;
	ИначеЕсли ОписаниеТипа.СодержитТип(Тип("Строка")) Тогда
		ГруппаНастройкиТипов.ТекущаяСтраница = Элементы.ГруппаНастройкиСтроки;		
	ИначеЕсли ОписаниеТипа.СодержитТип(Тип("Число")) Тогда
		ГруппаНастройкиТипов.ТекущаяСтраница = Элементы.ГруппаНастройкиЧисла;
	Иначе
		ГруппаНастройкиТипов.ТекущаяСтраница = Элементы.ГруппаБезНастроек;		
	КонецЕсли;
	
	УстановитьДоступностьДополнительныхСвойствТипов(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыДанныхПриИзменении(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные; 
	УстановитьДоступностьДополнительныхСвойствТипов(ТекущиеДанные);
	
	ЭлементыДерева = ТипыДанных.ПолучитьЭлементы();
	
	Если Не СоставнойТипДанных ИЛИ ТекущиеДанные.ОписаниеТипа.СодержитТип(Тип("Структура")) Тогда
		СнятьОтметкуВсехТиповКромеТекущего(ЭлементыДерева, ТекущиеДанные);
	КонецЕсли;
	
	Если СоставнойТипДанных И Не ТекущиеДанные.ОписаниеТипа.СодержитТип(Тип("Структура")) Тогда
		Для Каждого Стр Из ЭлементыДерева Цикл
			Если Стр.ОписаниеТипа.СодержитТип(Тип("Структура")) Тогда
				Стр.Выбран = Ложь;
				Прервать;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СоставнойТипДанных И ТекущиеДанные.ОписаниеТипа.СодержитТип(Тип("СправочникСсылка.лм_ВидыУниверсальныхСправочников")) Тогда
		Для Каждого Стр Из ЭлементыДерева Цикл
			Если Не ЗначениеЗаполнено(Стр.ОписаниеТипа) Тогда
				ЭлементыУС = Стр.ПолучитьЭлементы();
				Для Каждого СтрУС Из ЭлементыУС Цикл
					Если СтрУС = ТекущиеДанные Тогда
						Продолжить;
					КонецЕсли;			
					СтрУС.Выбран = Ложь;					
				КонецЦикла;
				Прервать;	
			КонецЕсли;				
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаНеограниченнаяПриИзменении(Элемент)
	
	Если СтрокаНеограниченная Тогда
		ДлинаСтроки = 0;
		Элементы.СвойстваДлиныСтроки.Доступность = Ложь;
		СвойстваДлиныСтроки = "Переменная";
	Иначе
		ДлинаСтроки = 10;
		Элементы.СвойстваДлиныСтроки.Доступность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДлинаСтрокиПриИзменении(Элемент)
	
	Если ДлинаСтроки > 0 Тогда
		СтрокаНеограниченная = Ложь;
		Элементы.СвойстваДлиныСтроки.Доступность = Истина;
	Иначе
		СтрокаНеограниченная = Истина;
		Элементы.СвойстваДлиныСтроки.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТочностьЧислаПриИзменении(Элемент)
	
	Если ДлинаЧисла < ТочностьЧисла Тогда
		ДлинаЧисла = ТочностьЧисла;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДлинаЧислаПриИзменении(Элемент)
	
	Если ДлинаЧисла < ТочностьЧисла Тогда
		ТочностьЧисла = ДлинаЧисла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
		
	Закрыть(СформироватьПараметрыВыбора());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоТиповДанных()
	
	ДеревоТипов = Новый ДеревоЗначений;
	ДеревоТипов.Колонки.Добавить("Выбран",         Новый ОписаниеТипов("Булево"));
	ДеревоТипов.Колонки.Добавить("ИмяТипа",        Новый ОписаниеТипов("Строка"));
	ДеревоТипов.Колонки.Добавить("ОписаниеТипа",   Новый ОписаниеТипов("ОписаниеТипов"));
	ДеревоТипов.Колонки.Добавить("ВидСправочника", Новый ОписаниеТипов("СправочникСсылка.лм_ВидыУниверсальныхСправочников"));
				
	СформироватьСтрокиПримитивныхТипов(ДеревоТипов.Строки);
	СформироватьСтрокиСсылочныхТипов(ДеревоТипов.Строки);
	СформироватьСтрокиУниверсальныхСправочников(ДеревоТипов.Строки);
			
	ЗначениеВРеквизитФормы(ДеревоТипов, "ТипыДанных");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокиПримитивныхТипов(СтрокиДерева)
	
	НовыйТип              = СтрокиДерева.Добавить();
	НовыйТип.ИмяТипа      = "Булево";
	НовыйТип.ОписаниеТипа = Новый ОписаниеТипов("Булево");
	
	НовыйТип              = СтрокиДерева.Добавить();
	НовыйТип.ИмяТипа      = "Дата";
	НовыйТип.ОписаниеТипа = Новый ОписаниеТипов("Дата");
	
	НовыйТип              = СтрокиДерева.Добавить();
	НовыйТип.ИмяТипа      = "Строка";
	НовыйТип.ОписаниеТипа = Новый ОписаниеТипов("Строка");
	
	НовыйТип              = СтрокиДерева.Добавить();
	НовыйТип.ИмяТипа      = "Число";
	НовыйТип.ОписаниеТипа = Новый ОписаниеТипов("Число");

	Если Параметры.ЭтоОсновнаяСтруктура Тогда
		НовыйТип              = СтрокиДерева.Добавить();
		НовыйТип.ИмяТипа      = "Структура";
		НовыйТип.ОписаниеТипа = Новый ОписаниеТипов("Структура");
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокиУниверсальныхСправочников(СтрокиДерева)
	
	ЗапросУниверсальных       = Новый Запрос;
	ЗапросУниверсальных.Текст =  "ВЫБРАТЬ
	                             |	лм_ВидыУниверсальныхСправочников.Наименование КАК Наименование,
	                             |	лм_ВидыУниверсальныхСправочников.Ссылка КАК Ссылка
	                             |ИЗ
	                             |	Справочник.лм_ВидыУниверсальныхСправочников КАК лм_ВидыУниверсальныхСправочников";
	
	Выборка = ЗапросУниверсальных.Выполнить().Выбрать();
	
	Если Выборка.Количество() <> 0 Тогда
		СтрокаУниверсальныеСправочники         = СтрокиДерева.Добавить();
		СтрокаУниверсальныеСправочники.ИмяТипа = "Универсальные справочники";
		
		Пока Выборка.Следующий() Цикл
			Строка                = СтрокаУниверсальныеСправочники.Строки.Добавить();		
			Строка.ИмяТипа        = Выборка.Наименование;
			Строка.ОписаниеТипа   = Новый ОписаниеТипов("СправочникСсылка.лм_ВидыУниверсальныхСправочников");
			Строка.ВидСправочника = Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтрокиСсылочныхТипов(СтрокиДерева)
	
	МассивТипов = Метаданные.ОпределяемыеТипы.лм_СсылочныйТипРеквизитаСтруктуры.Тип.Типы();
	
	Для Каждого СсылочныйТип Из МассивТипов Цикл
		Если СсылочныйТип = Тип("СправочникСсылка.лм_УниверсальныеСправочники") Тогда
			Продолжить;
		КонецЕсли;
		НовыйТип              = СтрокиДерева.Добавить();
		НовыйТип.ИмяТипа      = Строка(СсылочныйТип);
		ДобавляемыеТипы       = Новый Массив;
		ДобавляемыеТипы.Добавить(СсылочныйТип);
		НовыйТип.ОписаниеТипа = Новый ОписаниеТипов(Новый ОписаниеТипов, ДобавляемыеТипы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьДополнительныхСвойствТипов(ТекущиеДанные)
	
	ГруппаНастройкиТипов = Элементы.ГруппаНастройкиПримитивныхТипов;
		
	Если Не ТекущиеДанные.Выбран Тогда
		ГруппаНастройкиТипов.ТекущаяСтраница.Доступность = Ложь;
	Иначе
		ГруппаНастройкиТипов.ТекущаяСтраница.Доступность = Истина;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Функция СформироватьПараметрыВыбора()
	
	Возврат СформироватьПараметрыВыбораНаСервере();
	
КонецФункции

&НаСервере
Функция СформироватьПараметрыВыбораНаСервере()
	
	ПараметрыВыбора = Новый Структура;
	
	ОписаниеВыбранногоТипа = Новый ОписаниеТипов;
	
	ДеревоТипов = РеквизитФормыВЗначение("ТипыДанных");
	
	Для Каждого Стр Из ДеревоТипов.Строки Цикл
		Если Стр.Выбран И ЗначениеЗаполнено(Стр.ОписаниеТипа) Тогда
			ОписаниеВыбранногоТипа = Новый ОписаниеТипов(ОписаниеВыбранногоТипа, Стр.ОписаниеТипа.Типы());
		ИначеЕсли Не ЗначениеЗаполнено(Стр.ОписаниеТипа) Тогда
			Для Каждого СтрУн Из Стр.Строки Цикл
				Если СтрУн.Выбран Тогда
					ОписаниеВыбранногоТипа = Новый ОписаниеТипов(ОписаниеВыбранногоТипа, СтрУн.ОписаниеТипа.Типы());
					ПараметрыВыбора.Вставить("ВидСправочника", СтрУн.ВидСправочника);
					Прервать;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;		
	КонецЦикла;	
	
	ОписаниеВыбранногоТипа = Новый ОписаниеТипов(ОписаниеВыбранногоТипа,,, Новый КвалификаторыЧисла(ДлинаЧисла, ТочностьЧисла, ПолучитьДопустимыйЗнак()), Новый КвалификаторыСтроки(ДлинаСтроки, ПолучитьСвойствоДлиныСтроки()), Новый КвалификаторыДаты(ПолучитьСоставДаты()));
	
	ПараметрыВыбора.Вставить("ОписаниеВыбранногоТипа", ОписаниеВыбранногоТипа);
	
	Возврат ПараметрыВыбора;
		
КонецФункции

&НаКлиенте
Процедура СнятьОтметкуВсехТиповКромеТекущего(ЭлементыДерева, ТекущиеДанные)

	Для Каждого Стр Из ЭлементыДерева Цикл
		Если Не ЗначениеЗаполнено(Стр.ОписаниеТипа) Тогда
			ЭлементыУС = Стр.ПолучитьЭлементы();
			Для Каждого СтрУС Из ЭлементыУС Цикл
				Если СтрУС = ТекущиеДанные Тогда
					Продолжить;
				КонецЕсли;			
				СтрУС.Выбран = Ложь;					
			КонецЦикла;
			Продолжить;	
		КонецЕсли;
		
		Если Стр = ТекущиеДанные Тогда
			Продолжить;
		КонецЕсли;			
		Стр.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыбранныеТипы()
	
	МассивТипов = Параметры.ТипЗначения.Типы();
	
	Если МассивТипов.Количество() > 1 Тогда
		СоставнойТипДанных = Истина;	
	КонецЕсли;
		
	СоставДаты = Строка(Параметры.ТипЗначения.КвалификаторыДаты.ЧастиДаты);
	
	СвойстваДлиныСтроки  = Строка(Параметры.ТипЗначения.КвалификаторыСтроки.ДопустимаяДлина);	
	ДлинаСтроки          = Параметры.ТипЗначения.КвалификаторыСтроки.Длина;
	СтрокаНеограниченная = ДлинаСтроки = 0;
	Если СтрокаНеограниченная Тогда
		Элементы.СвойстваДлиныСтроки.Доступность = Ложь;	
	КонецЕсли;
	
	ЧислоНеотрицательное = НЕ Строка(Параметры.ТипЗначения.КвалификаторыЧисла.ДопустимыйЗнак) = "Любой";
	ДлинаЧисла           = Параметры.ТипЗначения.КвалификаторыЧисла.Разрядность;
	ТочностьЧисла        = Параметры.ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти;
	
	ЭлементыДерева = ТипыДанных.ПолучитьЭлементы();
		
	Для Каждого Стр Из ЭлементыДерева Цикл
		Для Каждого ВыбТип Из МассивТипов Цикл
			Если Стр.ОписаниеТипа.СодержитТип(ВыбТип) Тогда
				Стр.Выбран = Истина;	
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(Стр.ОписаниеТипа) Тогда
			ЭлементыУС = Стр.ПолучитьЭлементы();
			Для Каждого СтрУС Из ЭлементыУС Цикл
				Для Каждого ВыбТип Из МассивТипов Цикл
					Если СтрУС.ОписаниеТипа.СодержитТип(ВыбТип) И СтрУС.ИмяТипа = Строка(Параметры.ВидСправочника) Тогда
						СтрУС.Выбран = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСвойствоДлиныСтроки()
	
	Если СвойстваДлиныСтроки = "Фиксированная" Тогда
		Возврат ДопустимаяДлина.Фиксированная;	
	Иначе
		Возврат ДопустимаяДлина.Переменная;	
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьСоставДаты()
	
	Если СоставДаты = "Дата и время" Тогда
		Возврат ЧастиДаты.ДатаВремя;
	ИначеЕсли СоставДаты = "Дата" Тогда
		Возврат ЧастиДаты.Дата;
	Иначе
		Возврат ЧастиДаты.Время;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьДопустимыйЗнак()
	
	Если ЧислоНеотрицательное Тогда
		Возврат ДопустимыйЗнак.Неотрицательный;
	Иначе
		Возврат ДопустимыйЗнак.Любой;
	КонецЕсли;
	
КонецФункции

#КонецОбласти